==========================
Jira
==========================
ðŸ”˜ jira.since

Issues updated after this time will be processed by the connector. If left blank, the default time will be set to the time this connector is launched. The expected format for jira.since is yyyy-MM-dd HH:mm.

	 - Type: STRING
	 - Default: 2025-10-11 18:32
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ jira.resources

The resources that are to be extracted and written to Kafka.

	 - Type: LIST
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ entity.names



	 - Type: false
	 - Default: LIST
	 - Importance: The entities that are to be extracted and written to Kafka.
	 - Required: HIGH

==========================
Authorization
==========================
ðŸ”˜ jira.username

The username to be used to authenticate with Jira.

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ jira.api.token

The password to be used to authenticate with Jira

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ auth.type

Authentication type of the endpoint. Valid values are ``none``, ``basic``, ``oauth2``, ``bearer`` (Client Credentials grant type only).

	 - Type: STRING
	 - Default: basic
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ connection.user



	 - Type: false
	 - Default: STRING
	 - Importance: The username to be used with an endpoint requiring authentication.
	 - Required: HIGH

ðŸ”˜ connection.password

The password to be used with an endpoint requiring authentication.

	 - Type: PASSWORD
	 - Default: [hidden]
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ bearer.token

The bearer authentication token to be used when ``auth.type=bearer``. The supplied token will be used as the value of ``Authorization`` header in HTTP requests.

	 - Type: PASSWORD
	 - Default: [hidden]
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ oauth2.token.url



	 - Type: false
	 - Default: STRING
	 - Importance: The URL to be used for fetching OAUTH2 token. Client Credentials is the only supported grant type.
	 - Required: HIGH

ðŸ”˜ oauth2.client.id



	 - Type: false
	 - Default: STRING
	 - Importance: The client id used when fetching OAuth2 token
	 - Required: HIGH

ðŸ”˜ oauth2.client.secret

The secret used when fetching OAuth2 token

	 - Type: PASSWORD
	 - Default: [hidden]
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ oauth2.token.property

The name of the property containing the OAuth2 token returned by the http proxy. Default value is ``access_token``.

	 - Type: STRING
	 - Default: access_token
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ oauth2.client.mode

Specifies how to encode ``client_id`` and ``client_secret`` in the OAuth2 authorization request. If set to ``header``, the credentials are encoded as an ``'Authorization: Basic <base-64 encoded client_id:client_secret>'`` HTTP header. If set to 'url', then ``client_id`` and ``client_secret`` are sent as URL encoded parameters.

	 - Type: STRING
	 - Default: header
	 - Importance: LOW
	 - Required: false

==========================
oauth2.client.scope
==========================
ðŸ”˜ any



	 - Type: false
	 - Default: STRING
	 - Importance: The scope parameter sent to the service when fetching OAuth2 token.
	 - Required: LOW

==========================
Jira
==========================
ðŸ”˜ jira.url

Jira Service Url.

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ url

Service URL.

	 - Type: STRING
	 - Default: http://localhost:8080
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ jira.lookback.ms

The number of milliseconds to look back when querying for issues. This creates a time window (lastUpdatedDate - X ms) to (currentTime) to handle potential race conditions and ensure no issues are missed. Default is 0 (disabled).

	 - Type: LONG
	 - Default: 0
	 - Importance: MEDIUM
	 - Required: false

==========================
Limits
==========================
ðŸ”˜ max.batch.size

The maximum number of records that should be returned and written to Kafka at once.

	 - Type: INT
	 - Default: 100
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ max.in.flight.requests

The maximum number of requests that may be in-flight at once.

	 - Type: INT
	 - Default: 10
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ max.poll.interval.ms

The time in milliseconds to wait while polling for a full batch of records.

	 - Type: LONG
	 - Default: 100
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ request.interval.ms

The time in milliseconds to wait before checking for updated records. This is the interval to wait between consecutive requests to source system. Caution: setting this will overwrite any source-system specific delays specified for entities internally by the connector

	 - Type: LONG
	 - Default: 100
	 - Importance: MEDIUM
	 - Required: false

==========================
Topics
==========================
ðŸ”˜ topic.name.pattern

The pattern to use for the topic name, where the ``${resourceName}`` literal will be replaced with each resource name.

	 - Type: STRING
	 - Default: ${resourceName}
	 - Importance: HIGH
	 - Required: false

==========================
Retries
==========================
ðŸ”˜ max.retries

The maximum number of times to retry on errors before failing the task.

	 - Type: INT
	 - Default: 10
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ retry.backoff.ms

The time in milliseconds to wait following an error before a retry attempt is made.

	 - Type: INT
	 - Default: 3000
	 - Importance: MEDIUM
	 - Required: false

==========================
Proxy
==========================
ðŸ”˜ http.proxy.host



	 - Type: false
	 - Default: STRING
	 - Importance: The host or ip of the http proxy.
	 - Required: LOW

ðŸ”˜ http.proxy.port

The port number of the http proxy.

	 - Type: INT
	 - Default: 0
	 - Importance: LOW
	 - Required: false

ðŸ”˜ http.proxy.user



	 - Type: false
	 - Default: STRING
	 - Importance: The username to be used when authenticating with the http proxy.
	 - Required: LOW

ðŸ”˜ http.proxy.password

The password to be used when authenticating with the http proxy.

	 - Type: PASSWORD
	 - Default: [hidden]
	 - Importance: LOW
	 - Required: false

==========================
License
==========================
ðŸ”˜ confluent.license

Confluent will issue a license key to each subscriber. The license key will be a short snippet of text that you can copy and paste. Without the license key, you can use the connector for a 30-day trial period. If you are a subscriber, please contact Confluent Support for more information.

	 - Type: PASSWORD
	 - Default: [hidden]
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ confluent.topic.bootstrap.servers

A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form ``host1:port1,host2:port2,...``. These servers are used only for the initial connection to discover the full cluster membership, which may change dynamically, so this list need not contain the full set of servers. You may want more than one, in case a server is down.

	 - Type: LIST
	 - Default: null
	 - Importance: HIGH
	 - Required: true

ðŸ”˜ confluent.topic

Name of the Kafka topic used for Confluent Platform configuration, including licensing information.

	 - Type: STRING
	 - Default: _confluent-command
	 - Importance: LOW
	 - Required: false

ðŸ”˜ confluent.topic.replication.factor

The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).

	 - Type: INT
	 - Default: 3
	 - Importance: LOW
	 - Required: false

==========================
SSL
==========================
ðŸ”˜ https.ssl.enabled

Whether or not to connect to the endpoint via SSL.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.protocol

The SSL protocol used to generate the SSLContext. The default is 'TLSv1.3', which should be fine for most use cases. A typical alternative to the default is 'TLSv1.2'. Allowed values for this config are dependent on the JVM. Clients using the defaults for this config and 'ssl.enabled.protocols' will downgrade to 'TLSv1.2' if the server does not support 'TLSv1.3'. If this config is set to 'TLSv1.2', however, clients will not use 'TLSv1.3' even if it is one of the values in `ssl.enabled.protocols` and the server only supports 'TLSv1.3'.

	 - Type: STRING
	 - Default: TLSv1.3
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ https.ssl.provider

The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.

	 - Type: STRING
	 - Default: null
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ https.ssl.cipher.suites

A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.

	 - Type: LIST
	 - Default: null
	 - Importance: LOW
	 - Required: false

ðŸ”˜ https.ssl.enabled.protocols

The list of protocols enabled for SSL connections. The default is 'TLSv1.2,TLSv1.3'. This means that clients and servers will prefer TLSv1.3 if both support it and fallback to TLSv1.2 otherwise (assuming both support at least TLSv1.2). This default should be fine for most use cases. Also see the config documentation for `ssl.protocol` to understand how it can impact the TLS version negotiation behavior.

	 - Type: LIST
	 - Default: TLSv1.2,TLSv1.3
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ https.ssl.keystore.type

The file format of the key store file. This is optional for client. The values currently supported by the default `ssl.engine.factory.class` are [JKS, PKCS12, PEM].

	 - Type: STRING
	 - Default: JKS
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ https.ssl.keystore.location

The location of the key store file. This is optional for client and can be used for two-way authentication for client.

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.keystore.password

The store password for the key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured. Key store password is not supported for PEM format.

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.key.password

The password of the private key in the key store file or the PEM key specified in 'ssl.keystore.key'.

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.keystore.key

Private key in the format specified by 'ssl.keystore.type'. Default SSL engine factory supports only PEM format with PKCS#8 keys. If the key is encrypted, key password must be specified using 'ssl.key.password'

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.keystore.certificate.chain

Certificate chain in the format specified by 'ssl.keystore.type'. Default SSL engine factory supports only PEM format with a list of X.509 certificates

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.truststore.certificates

Trusted certificates in the format specified by 'ssl.truststore.type'. Default SSL engine factory supports only PEM format with X.509 certificates.

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.truststore.type

The file format of the trust store file. The values currently supported by the default `ssl.engine.factory.class` are [JKS, PKCS12, PEM].

	 - Type: STRING
	 - Default: JKS
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ https.ssl.truststore.location

The location of the trust store file.

	 - Type: STRING
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.truststore.password

The password for the trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled. Trust store password is not supported for PEM format.

	 - Type: PASSWORD
	 - Default: null
	 - Importance: HIGH
	 - Required: false

ðŸ”˜ https.ssl.keymanager.algorithm

The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.

	 - Type: STRING
	 - Default: SunX509
	 - Importance: LOW
	 - Required: false

ðŸ”˜ https.ssl.trustmanager.algorithm

The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.

	 - Type: STRING
	 - Default: PKIX
	 - Importance: LOW
	 - Required: false

ðŸ”˜ https.ssl.endpoint.identification.algorithm

The endpoint identification algorithm to validate server hostname using server certificate.

	 - Type: STRING
	 - Default: https
	 - Importance: LOW
	 - Required: false

ðŸ”˜ https.ssl.secure.random.implementation

The SecureRandom PRNG implementation to use for SSL cryptography operations.

	 - Type: STRING
	 - Default: null
	 - Importance: LOW
	 - Required: false

ðŸ”˜ https.ssl.engine.factory.class

The class of type org.apache.kafka.common.security.auth.SslEngineFactory to provide SSLEngine objects. Default value is org.apache.kafka.common.security.ssl.DefaultSslEngineFactory. Alternatively, setting this to org.apache.kafka.common.security.ssl.CommonNameLoggingSslEngineFactory will log the common name of expired SSL certificates used by clients to authenticate at any of the brokers with log level INFO. Note that this will cause a tiny delay during establishment of new connections from mTLS clients to brokers due to the extra code for examining the certificate chain provided by the client. Note further that the implementation uses a custom truststore based on the standard Java truststore and thus might be considered a security risk due to not being as mature as the standard one.

	 - Type: CLASS
	 - Default: null
	 - Importance: LOW
	 - Required: false

==========================
Request
==========================
ðŸ”˜ connection.disallow.local.ips

Disallow local IP addresses after DNS resolution.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ connection.disallow.private.ips

Disallow private IP addresses after DNS resolution.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ connection.disallow.class.e.ips

Disallow Class E IP addresses after DNS resolution.

	 - Type: BOOLEAN
	 - Default: false
	 - Importance: MEDIUM
	 - Required: false

ðŸ”˜ connection.disallow.cidr.ranges



	 - Type: false
	 - Default: LIST
	 - Importance: Disallow IP addresses from the configured CIDR ranges after DNS resolution.
	 - Required: MEDIUM

ðŸ”˜ connection.allow.cidr.ranges



	 - Type: false
	 - Default: LIST
	 - Importance: Allow IP addresses from the configured CIDR ranges after DNS resolution.
	 - Required: MEDIUM

==========================
Serialization
==========================
ðŸ”˜ key.converter.decimal.format

Controls which format this converter will serialize decimals in. This value is case insensitive and can be either 'BASE64' (default) or 'NUMERIC'

	 - Type: STRING
	 - Default: BASE64
	 - Importance: LOW
	 - Required: false

==========================
null
==========================
ðŸ”˜ key.converter.converter.type

How this converter will be used.

	 - Type: STRING
	 - Default: null
	 - Importance: LOW
	 - Required: true

==========================
Schemas
==========================
ðŸ”˜ key.converter.schemas.cache.size

The maximum number of schemas that can be cached in this converter instance.

	 - Type: INT
	 - Default: 1000
	 - Importance: HIGH
	 - Required: false

==========================
Serialization
==========================
ðŸ”˜ key.converter.replace.null.with.default

Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: LOW
	 - Required: false

==========================
Schemas
==========================
ðŸ”˜ key.converter.schemas.enable

Include schemas within each of the serialized values and keys.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: HIGH
	 - Required: false

==========================
Serialization
==========================
ðŸ”˜ value.converter.decimal.format

Controls which format this converter will serialize decimals in. This value is case insensitive and can be either 'BASE64' (default) or 'NUMERIC'

	 - Type: STRING
	 - Default: BASE64
	 - Importance: LOW
	 - Required: false

==========================
null
==========================
ðŸ”˜ value.converter.converter.type

How this converter will be used.

	 - Type: STRING
	 - Default: null
	 - Importance: LOW
	 - Required: true

==========================
Schemas
==========================
ðŸ”˜ value.converter.schemas.cache.size

The maximum number of schemas that can be cached in this converter instance.

	 - Type: INT
	 - Default: 1000
	 - Importance: HIGH
	 - Required: false

==========================
Serialization
==========================
ðŸ”˜ value.converter.replace.null.with.default

Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: LOW
	 - Required: false

==========================
Schemas
==========================
ðŸ”˜ value.converter.schemas.enable

Include schemas within each of the serialized values and keys.

	 - Type: BOOLEAN
	 - Default: true
	 - Importance: HIGH
	 - Required: false

