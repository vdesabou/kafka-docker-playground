---
version: '3.5'
services:

  # broker:
  #   environment:
  #     # KAFKA_MESSAGE_MAX_BYTES: 10485760
  #     KAFKA_NUM_PARTITIONS: 100


  vertica:
    image: cjonesy/docker-vertica
    hostname: vertica
    container_name: vertica
    ports:
      - 5433:5433

  producer:
    build:
      context: ../../connect/connect-vertica-sink/producer/
      args:
        TAG: ${TAG}
        CP_BASE_IMAGE: ${CP_BASE_IMAGE}
        KAFKA_CLIENT_TAG: ${KAFKA_CLIENT_TAG}
    hostname: producer
    container_name: producer
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - vertica

  connect:
    privileged: true
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - vertica
    volumes:
        - ../../connect/connect-vertica-sink/vertica-jdbc.jar:/usr/share/confluent-hub-components/confluentinc-kafka-connect-vertica/lib/vertica-jdbc.jar
        - ../../connect/connect-vertica-sink/EmptySchema/target/EmptySchema-1.0.0-SNAPSHOT.jar:/usr/share/confluent-hub-components/confluentinc-kafka-connect-vertica/lib/EmptySchema-1.0.0-SNAPSHOT.jar
        - ../../connect/connect-vertica-sink/kafka-connect-vertica-1.2.2_ashah_73a163d.jar:/usr/share/confluent-hub-components/confluentinc-kafka-connect-vertica/lib/kafka-connect-vertica-1.2.2.jar
    environment:
      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components/confluentinc-kafka-connect-vertica,/usr/share/confluent-hub-components/confluentinc-connect-transforms
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      # CONNECT_LOG4J_ROOT_LOGLEVEL: TRACE
