connector.class=io.debezium.connector.sqlserver.SqlServerConnector
name=my-connector
tasks.max=1
database.hostname=localhost
database.port=1433
database.user=sa
database.password=Password!
database.names=testDB
topic.creation.default.replication.factor=-1
topic.creation.default.partitions=-1
#_comment=new version since 2.x
database.server.name=server1
database.history.kafka.bootstrap.servers=${file:/data:bootstrap.servers}
database.history.kafka.topic=schema-changes.inventory
database.history.producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
database.history.producer.sasl.mechanism=PLAIN
database.history.producer.security.protocol=SASL_SSL
database.history.consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
database.history.consumer.sasl.mechanism=PLAIN
database.history.consumer.security.protocol=SASL_SSL
database.encrypt=false
topic.prefix=server1
schema.history.internal.kafka.bootstrap.servers=${file:/data:bootstrap.servers}
schema.history.internal.kafka.topic=schema-changes.inventory
schema.history.internal.producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
schema.history.internal.producer.sasl.mechanism=PLAIN
schema.history.internal.producer.security.protocol=SASL_SSL
schema.history.internal.consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
schema.history.internal.consumer.sasl.mechanism=PLAIN
schema.history.internal.consumer.security.protocol=SASL_SSL
