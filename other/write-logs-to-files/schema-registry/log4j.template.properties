log4j.rootLogger={{ env["SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL"] | default('INFO') }}, stdout, schemaRegistryAppender

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.schemaRegistryAppender=org.apache.log4j.RollingFileAppender
log4j.appender.schemaRegistryAppender.File=/tmp/schema-registry/schema-registry.log
log4j.appender.schemaRegistryAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.schemaRegistryAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
log4j.appender.schemaRegistryAppender.maxBackupIndex=10
log4j.appender.schemaRegistryAppender.maxFileSize=100MB

{% if env['SCHEMA_REGISTRY_LOG4J_LOGGERS'] %}
{% set loggers = parse_log4j_loggers(env['SCHEMA_REGISTRY_LOG4J_LOGGERS']) %}
{% for logger,loglevel in loggers.items() %}
log4j.logger.{{logger}}={{loglevel}}, stdout
{% endfor %}
{% endif %}
