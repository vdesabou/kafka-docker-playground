log4j.rootLogger={{ env["KSQL_LOG4J_ROOT_LOGLEVEL"] | default('INFO') }}, stdout, ksqlAppender

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

# appenders
log4j.appender.ksqlAppender=org.apache.log4j.RollingFileAppender
log4j.appender.ksqlAppender.File=/tmp/ksql-server/ksql.log
log4j.appender.ksqlAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.ksqlAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.ksqlAppender.MaxFileSize=100MB
log4j.appender.ksqlAppender.MaxBackupIndex=10
log4j.appender.ksqlAppender.append=true

log4j.appender.streamsAppender=org.apache.log4j.RollingFileAppender
log4j.appender.streamsAppender.File=/tmp/ksql-server/ksql-streams.log
log4j.appender.streamsAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.streamsAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.streamsAppender.MaxFileSize=100MB
log4j.appender.streamsAppender.MaxBackupIndex=10
log4j.appender.streamsAppender.append=true

log4j.appender.kafkaAppender=org.apache.log4j.RollingFileAppender
log4j.appender.kafkaAppender.File=/tmp/ksql-server/ksql-kafka.log
log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c:%L)%n
log4j.appender.kafkaAppender.MaxFileSize=100MB
log4j.appender.kafkaAppender.MaxBackupIndex=10
log4j.appender.kafkaAppender.append=true

{% if env['KSQL_LOG4J_PROCESSING_LOG_BROKERLIST'] %}
log4j.appender.kafka_appender=org.apache.kafka.log4jappender.KafkaLog4jAppender
log4j.appender.kafka_appender.layout=io.confluent.common.logging.log4j.StructuredJsonLayout
log4j.appender.kafka_appender.BrokerList={{ env["KSQL_LOG4J_PROCESSING_LOG_BROKERLIST"] | default('localhost:9092') }}
log4j.appender.kafka_appender.Topic={{ env["KSQL_LOG4J_PROCESSING_LOG_TOPIC"] | default('default_ksql_processing_log') }}
log4j.logger.processing=ERROR, kafka_appender
{% endif %}

{% if env['KSQL_LOG4J_LOGGERS'] %}
{% set loggers = parse_log4j_loggers(env['KSQL_LOG4J_LOGGERS']) %}
{% for logger,loglevel in loggers.items() %}
log4j.logger.{{logger}}={{loglevel}}, stdout
{% endfor %}
{% endif %}

# loggers
log4j.logger.org.apache.kafka.streams={{ env["KSQL_LOG4J_ROOT_LOGLEVEL"] | default('INFO') }}, streamsAppender
log4j.additivity.org.apache.kafka.streams=false

log4j.logger.kafka=ERROR, kafkaAppender
log4j.additivity.kafka=false

log4j.logger.org.apache.zookeeper=ERROR, kafkaAppender
log4j.additivity.org.apache.zookeeper=false

log4j.logger.org.apache.kafka=ERROR, kafkaAppender
log4j.additivity.org.apache.kafka=false

log4j.logger.org.I0Itec.zkclient=ERROR, kafkaAppender
log4j.additivity.org.I0Itec.zkclient=false

log4j.logger.processing=ERROR, kafka_appender
log4j.additivity.processing=false

