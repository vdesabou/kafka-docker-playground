{
  "name": "playground",
  "description": "üß† CLI for Kafka Docker Playground üê≥\n\nüëâ Check documentation https://kafka-docker-playground.io/#/cli\n",
  "usage": "playground [OPTIONS] COMMAND",
  "options": [],
  "inheritedOptions": [],
  "subcommands": [
    {
      "name": "help",
      "description": "Show help about a command\n",
      "usage": "playground help [COMMAND]",
      "options": [],
      "subcommands": null
    },
    {
      "name": "status",
      "description": "üó∫Ô∏è Show a status\n",
      "usage": "playground status",
      "options": [],
      "subcommands": null
    },
    {
      "name": "config",
      "description": "‚öôÔ∏è Configure CLI\n",
      "usage": "playground config COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "editor",
          "description": "editor to use to open files\n",
          "usage": "playground config editor EDITOR",
          "options": []
        },
        {
          "name": "folder_zip_or_jar",
          "description": "üìÇ list of folders where to search for zip or jar\n  current folder is always included\n  \n  default is ~ (home dir)\n",
          "usage": "playground config folder_zip_or_jar FOLDER...",
          "options": []
        },
        {
          "name": "clipboard",
          "description": "copy to clipboard connector config (only working on MacOS)\n",
          "usage": "playground config clipboard [ENABLED]",
          "options": []
        },
        {
          "name": "open-ccloud-connector-in-browser",
          "description": "when running a fully managed connector example, it opens the connector in browser\n  \n",
          "usage": "playground config open-ccloud-connector-in-browser COMMAND",
          "options": []
        },
        {
          "name": "open-grafana-in-browser",
          "description": "when running an example with --enable-jmx-grafana flag, it opens grafana in browser\n  \n",
          "usage": "playground config open-grafana-in-browser COMMAND",
          "options": []
        },
        {
          "name": "container-kill-all-before-run",
          "description": "when running an example, always call playground container kill-all first. If set to false, it will call playground stop instead.\n  \n",
          "usage": "playground config container-kill-all-before-run [ENABLED]",
          "options": []
        },
        {
          "name": "check-and-update-repo-version",
          "description": "when running an example, always check if repo version is older than 3 days, if disabled, it will skip this check.\n  \n",
          "usage": "playground config check-and-update-repo-version [ENABLED]",
          "options": []
        }
      ]
    },
    {
      "name": "open-ccloud-connector-in-browser",
      "description": "when running a fully managed connector example, it opens the connector in browser\n",
      "usage": "playground config open-ccloud-connector-in-browser COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "automatically",
          "description": "automatically open the connector in browser\n",
          "usage": "playground config open-ccloud-connector-in-browser automatically [AUTOMATICALLY]",
          "options": []
        },
        {
          "name": "browser",
          "description": "browser to use\n",
          "usage": "playground config open-ccloud-connector-in-browser browser [BROWSER]",
          "options": []
        }
      ]
    },
    {
      "name": "open-grafana-in-browser",
      "description": "when running an example with --enable-jmx-grafana flag, it opens grafana in browser\n",
      "usage": "playground config open-grafana-in-browser COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "automatically",
          "description": "automatically open grafana in browser\n",
          "usage": "playground config open-grafana-in-browser automatically [AUTOMATICALLY]",
          "options": []
        },
        {
          "name": "browser",
          "description": "browser to use\n",
          "usage": "playground config open-grafana-in-browser browser [BROWSER]",
          "options": []
        }
      ]
    },
    {
      "name": "ai",
      "description": "üßû‚Äç‚ôÇÔ∏è  AI\n\nIt is using Gemini CI (https://google-gemini.github.io/gemini-cli/) in interactive mode.\n\nMCP servers are available:\n\n1. mcp-playground-cli - \n\n  Tools:\n  - playground_command_help:\n      Get detailed help for playground commands\n  - playground_command_suggest:\n      Get command suggestions and completions for the Kafka Docker Playground CLI\n  - playground_command_validate:\n      Validate a complete playground command and suggest corrections\n\n2. mcp-kafka - Kafka MCP Server (https://docs.tuannvm.com/kafka-mcp-server)\n\n  Tools:\n  - cluster_overview:\n      Aggregates high-level cluster health data, such as controller, broker/topic/partition counts, and under-replicated/offline partitions.\n  - consume_messages:\n      Consume a batch of messages from Kafka topics.\n  - describe_configs:\n      Fetches configuration entries for a specific resource (topic or broker).\n  - describe_consumer_group:\n      Shows details for a specific consumer group, including state, members, and optionally partition offsets and lag.\n  - describe_topic:\n      Provides detailed metadata for a specific Kafka topic, including partition leaders, replicas, and ISRs.\n  - list_brokers:\n      Lists the configured Kafka broker addresses.\n  - list_consumer_groups:\n      Enumerates active consumer groups known by the Kafka cluster.\n  - list_topics:\n      Retrieves all topic names along with partition counts and replication factors.\n  - produce_message:\n      Produce a message to a Kafka topic\n\n  Prompts:\n  - kafka_cluster_overview:\n      Provides a summary of Kafka cluster health and metrics\n  - kafka_consumer_lag_report:\n      Provide a detailed report on consumer lag across all consumer groups\n  - kafka_health_check:\n      Run a comprehensive health check on the Kafka cluster\n  - kafka_under_replicated_partitions:\n      List topics and partitions where ISR count is less than replication factor\n\n3. mcp-ccloud - Confluent Cloud MCP Server (https://github.com/confluentinc/mcp-confluent)\n\n  Tools:\n  - add-tags-to-topic:\n      Assign existing tags to Kafka topics in Confluent Cloud.\n  - alter-topic-config:\n      Alter topic configuration in Confluent Cloud.\n  - create-connector:\n      Create a new connector. Returns the new connector information if successful.\n  - create-topic-tags:\n      Create new tag definitions in Confluent Cloud.\n  - create-topics:\n      Create one or more Kafka topics.\n  - delete-connector:\n      Delete an existing connector. Returns success message if deletion was successful.\n  - delete-tag:\n      Delete a tag definition from Confluent Cloud.\n  - delete-topics:\n      Delete the topic with the given names.\n  - get-topic-config:\n      Retrieve configuration details for a specific Kafka topic.\n  - list-clusters:\n      Get all clusters in the Confluent Cloud environment\n  - list-connectors:\n      Retrieve a list of \"names\" of the active connectors. You can then make a read request for a specific connector by name.\n  - list-environments:\n      Get all environments in Confluent Cloud with pagination support\n  - list-schemas:\n      List all schemas in the Schema Registry.\n  - list-tags:\n      Retrieve all tags with definitions from Confluent Cloud Schema Registry.\n  - list-topics:\n      List all topics in the Kafka cluster.\n  - read-connector:\n      Get information about the connector.\n  - read-environment:\n      Get details of a specific environment by ID\n  - remove-tag-from-entity:\n      Remove tag from an entity in Confluent Cloud.\n  - search-topics-by-name:\n      List all topics in the Kafka cluster matching the specified name.\n  - search-topics-by-tag:\n      List all topics in the Kafka cluster with the specified tag.\n",
      "usage": "playground ai [--] [GEMINI CLI ARGUMENTS...]",
      "options": [],
      "subcommands": null
    },
    {
      "name": "ccloud-costs",
      "description": "üí∞  Retrieve ccloud costs for a range of dates\n\nAll you have to do is to be already logged in with confluent CLI. It is using https://docs.confluent.io/cloud/current/billing/overview.html#retrieve-costs-for-a-range-of-dates\n\nCost data can take up to 72 hours to become available.\n\nStart date can reach a maximum of one year into the past\n\nOne month is the maximum window between start and end dates\n\nFor accuracy, Confluent recommends using a start_date that is at least 72 hours prior to the current date and time.\n",
      "usage": "playground ccloud-costs [OPTIONS]",
      "options": [
        {
          "names": [
            "--start-date"
          ],
          "argument": "START_DATE",
          "description": "üóìÔ∏è start date in format yyyy-mm-dd\n\nDefault is 30 days ago\n"
        },
        {
          "names": [
            "--end-date"
          ],
          "argument": "END_DATE",
          "description": "üóìÔ∏è end date in format yyyy-mm-dd\n\n  Default is 3 days ago\n"
        },
        {
          "names": [
            "--display-only-total-cost"
          ],
          "argument": "",
          "description": "üí∞ display only total cost\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "ccloud-costs-history",
      "description": "üëõ  Retrieve ccloud costs for each month since last year\n\nAll you have to do is to be already logged in with confluent CLI. It is using https://docs.confluent.io/cloud/current/billing/overview.html#retrieve-costs-for-a-range-of-dates\n\nBy default it will only display total cost in dollars. Use the --detailed flag to see more information.\n",
      "usage": "playground ccloud-costs-history [OPTIONS]",
      "options": [
        {
          "names": [
            "--detailed"
          ],
          "argument": "",
          "description": "üíπ display all details for each month\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "run",
      "description": "üïπÔ∏è Run any example !\n\nüî• It start an interactive mode where you'll be fully guided !\n\n\n‚õÖ When running Confluent Cloud (ccloud) example:\n\n  All you have to do is to be already logged in with confluent CLI.\n\n  By default, a new Confluent Cloud environment with a Cluster will be created.\n\n  You can configure the new cluster by setting:\n\n  --cluster-type (or CLUSTER_TYPE environment variable): The type of cluster (possible values: basic, standard and dedicated, default basic)\n  --cluster-cloud (or CLUSTER_CLOUD environment variable): The Cloud provider (possible values: aws, gcp and azure, default aws)\n  --cluster-region (or CLUSTER_REGION environment variable): The Cloud region (use confluent kafka region list to get the list, default eu-west-2 for aws, westeurope for azure and europe-west2 for gcp)\n  --cluster-environment (or ENVIRONMENT environment variable) (optional): The environment id where want your new cluster (example: txxxxx) \n\n  In case you want to use your own existing cluster, you need to setup, in addition to previous ones:\n\n  --cluster-name (or CLUSTER_NAME environment variable): The cluster name\n  --cluster-creds (or CLUSTER_CREDS environment variable): The Kafka api key and secret to use, it should be separated with colon (example: <API_KEY>:<API_KEY_SECRET>)\n  --cluster-schema-registry-creds (or SCHEMA_REGISTRY_CREDS environment variable) (optional, if not set, new one will be created): The Schema Registry api key and secret to use, it should be separated with colon (example: <SR_API_KEY>:<SR_API_KEY_SECRET>)\n\n‚ùó this command will kill all containers using \"playground container kill-all\", you can disable this by running \"playground config container-kill-all-before-run false\"\n",
      "usage": "playground run [OPTIONS]",
      "options": [
        {
          "names": [
            "--environment"
          ],
          "argument": "plaintext",
          "description": "üîê The environment to start when running a connector example \n\n- plaintext\n- ccloud\n- 2way-ssl\n- kerberos\n- ldap-authorizer-sasl-plain\n- ldap-sasl-plain\n- rbac-sasl-plain\n- sasl-plain\n- sasl-scram\n- sasl-ssl\n- ssl_kerberos\n\nDefault is plaintext.\nThis is only supported when example is a connector example\n\nDefault value: plaintext\n\nAllowed values: ccloud, plaintext, sasl-ssl, sasl-plain, 2way-ssl, sasl-scram, kerberos, ssl_kerberos, ldap-authorizer-sasl-plain, ldap-sasl-plain, rbac-sasl-plain\n"
        },
        {
          "names": [
            "--file",
            "-f"
          ],
          "argument": "FILE",
          "description": "üîñ Example file to run\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--open",
            "-o"
          ],
          "argument": "",
          "description": "üìñ Opening example files (including docker-compose file) with text editor set with playground config editor <editor> (default is code)\n"
        },
        {
          "names": [
            "--tag"
          ],
          "argument": "TAG",
          "description": "üéØ Confluent Platform (CP) version to use. Applies to all components (broker, connect, schema registry, ksqlDB, etc...)\n\nIt sets TAG environment variable\n\nMust be greater or equal to 5.3.0\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--connect-tag"
          ],
          "argument": "CONNECT_TAG",
          "description": "üîó Confluent Platform (CP) version to use. Applies to connect only.\n\nIt sets CP_CONNECT_TAG environment variable\n\nMust be greater or equal to 5.3.0\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--connector-tag"
          ],
          "argument": "CONNECTOR_TAG",
          "description": "üîó Connector version to use\n\nBy default, for each connector, the latest available version on Confluent Hub is used\n\nüéì Tip: set to \" \" in order to select the version dynamically\n\nConflicts with: --connector-zip\n"
        },
        {
          "names": [
            "--connector-zip"
          ],
          "argument": "CONNECTOR_ZIP",
          "description": "ü§ê Connector zip to use\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion \n        use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files\n        use <option+enter> to use the value you typed manually\n\nConflicts with: --connector-tag\n"
        },
        {
          "names": [
            "--connector-jar"
          ],
          "argument": "CONNECTOR_JAR",
          "description": "ü§é Connector jar to use\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion \n        use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files\n        use <option+enter> to use the value you typed manually\n"
        },
        {
          "names": [
            "--enable-ksqldb"
          ],
          "argument": "",
          "description": "üöÄ Enable ksqlDB \n\n‚ùó not supported with ccloud examples\n\nBy default, ksqldb-server and ksqldb-cli containers are not started for every test\n"
        },
        {
          "names": [
            "--enable-rest-proxy"
          ],
          "argument": "",
          "description": "üß≤ Enable Rest Proxy\n\n‚ùó not supported with ccloud examples\n\nBy default, rest-proxy container is not started for every test\n"
        },
        {
          "names": [
            "--enable-control-center"
          ],
          "argument": "",
          "description": "üí† Enable Control Center\n\nBy default, control-center container is not started for every test\n\nControl Center is reachable at http://127.0.0.1:9021\n"
        },
        {
          "names": [
            "--enable-flink"
          ],
          "argument": "",
          "description": "üêøÔ∏è Enable Flink\n\nBy default, flink is not started for every test\n\nOnce enabled, the CLI will ask if you need to download any connectors. Based on the response, you can download one or more connectors from Flink maven repository.\n\nFlink UI is reacheable using http://127.0.0.1:8081 within the flink child directory. If you enable Flink by starting connector deployment, http://127.0.0.1:18081 will be used.\n"
        },
        {
          "names": [
            "--enable-conduktor"
          ],
          "argument": "",
          "description": "üê∫ Enable Conduktor Platform\n\nBy default, Conduktor Platform container is not started for every test\n\nConduktor is reachable at http://127.0.0.1:8080/console (admin/admin)\n"
        },
        {
          "names": [
            "--enable-multiple-brokers"
          ],
          "argument": "",
          "description": "3Ô∏è‚É£ Enable multiple brokers\n\nBy default, there is only one broker node enabled\n"
        },
        {
          "names": [
            "--enable-multiple-connect-workers"
          ],
          "argument": "",
          "description": "ü•â Enable multiple connect worker node\n\nBy default, there is only one connect worker node enabled\n"
        },
        {
          "names": [
            "--enable-jmx-grafana"
          ],
          "argument": "",
          "description": "Enable Grafana, Prometheus and Pyroscope\n\nüìä Grafana is reachable at http://127.0.0.1:3000 (login/password is admin/password)\n\nüõ°Ô∏è Prometheus is reachable at http://127.0.0.1:9090\n\nüìõ Pyroscope is reachable at http://127.0.0.1:4040\n"
        },
        {
          "names": [
            "--enable-kcat"
          ],
          "argument": "",
          "description": "üêà‚Äç‚¨õ Enable kcat\n\nYou can use it with:\n\n$ docker exec kcat kcat -b broker:9092 -L\n"
        },
        {
          "names": [
            "--enable-sql-datagen"
          ],
          "argument": "",
          "description": "üå™Ô∏è Enable SQL Datagen injection\n\nThis only works for Oracle, MySql, Postgres and Microsoft Sql Server source connector examples with JDBC and Debezium\n"
        },
        {
          "names": [
            "--cluster-cloud"
          ],
          "argument": [
            "aws",
            "gcp",
            "azure"
          ],
          "description": "üå§ The cloud provider: aws, gcp or azure. Default is aws\n\nüéì Tip: you can also use CLUSTER_CLOUD environment variable\n\nAllowed values: aws, gcp, azure\n"
        },
        {
          "names": [
            "--cluster-type"
          ],
          "argument": [
            "basic",
            "standard",
            "dedicated"
          ],
          "description": "üîã The cluster type: basic, standard or dedicated. Default is basic\n\nüéì Tip: you can also use CLUSTER_TYPE environment variable\n\nAllowed values: basic, standard, dedicated\n"
        },
        {
          "names": [
            "--cluster-region"
          ],
          "argument": "CLUSTER-REGION",
          "description": "üó∫ The Cloud region. \n\nüéì Tip: you can also use CLUSTER_REGION environment variable\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--cluster-environment"
          ],
          "argument": "CLUSTER-ENVIRONMENT",
          "description": "üåê The environment id where want your new cluster (example: txxxxx)\n\n‚ÑπÔ∏è Optional, if not set, new environment will be created\n\nüéì Tip: you can also use ENVIRONMENT environment variable\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--cluster-name"
          ],
          "argument": "CLUSTER-NAME",
          "description": "üé∞ The cluster name. \n\n‚ù£Ô∏è Only required if you want to use your own existing cluster\n\nüéì Tip: you can also use CLUSTER_NAME environment variable\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--cluster-creds"
          ],
          "argument": "CLUSTER-CREDS",
          "description": "üîí The Kafka api key and secret to use, it should be separated with colon (example: <API_KEY>:<API_KEY_SECRET>)\n\n‚ù£Ô∏è Only required if you want to use your own existing cluster\n\nüéì Tip: you can also use CLUSTER_CREDS environment variable\n"
        },
        {
          "names": [
            "--cluster-schema-registry-creds"
          ],
          "argument": "CLUSTER-SCHEMA-REGISTRY-CREDS",
          "description": "üîí The Schema Registry api key and secret to use, it should be separated with colon (example: <SR_API_KEY>:<SR_API_KEY_SECRET>)\n\n‚ÑπÔ∏è Optional, if not set, new credentials will be created\n\n‚ù£Ô∏è Only required if you want to use your own existing cluster\n\nüéì Tip: you can also use SCHEMA_REGISTRY_CREDS environment variable\n"
        },
        {
          "names": [
            "--force-interactive-re-run"
          ],
          "argument": "",
          "description": "Force interactive mode\n"
        },
        {
          "names": [
            "--force-interactive-repro"
          ],
          "argument": "",
          "description": "Force interactive mode\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "re-run",
      "description": "‚ö° Simply re-run last example you ran with <playground run>\n",
      "usage": "playground re-run",
      "options": [],
      "subcommands": null
    },
    {
      "name": "get-ci-result",
      "description": "ü§ñ get CI result for current example\n",
      "usage": "playground get-ci-result",
      "options": [],
      "subcommands": null
    },
    {
      "name": "history",
      "description": "üè∞ Get an history of the examples which were run with run command and run it again\n",
      "usage": "playground history",
      "options": [],
      "subcommands": null
    },
    {
      "name": "switch-ccloud",
      "description": "üå©Ô∏è  Switch to ccloud environment.\n\nIt will bootstrap ccloud environment based on your previously ran ccloud example.\n",
      "usage": "playground switch-ccloud",
      "options": [],
      "subcommands": null
    },
    {
      "name": "switch-back",
      "description": "üí∫  Switch back from previous environment before switch-ccloud was called.\n",
      "usage": "playground switch-back",
      "options": [],
      "subcommands": null
    },
    {
      "name": "update-version",
      "description": "‚ú® Update current confluent platform components (all with --tag or only connect with --connect-tag) or connector(s) with new version(s)\n",
      "usage": "playground update-version [OPTIONS]",
      "options": [
        {
          "names": [
            "--tag"
          ],
          "argument": "TAG",
          "description": "üéØ Confluent Platform (CP) version to use. Applies to all components (broker, connect, schema registry, ksqlDB, etc...)\n\nIt sets TAG environment variable\n\nMust be greater or equal to 5.3.0\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--connect-tag"
          ],
          "argument": "CONNECT_TAG",
          "description": "üîó Confluent Platform (CP) version to use. Applies to connect only.\n\nIt sets CP_CONNECT_TAG environment variable\n\nMust be greater or equal to 5.3.0\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
        },
        {
          "names": [
            "--connector-tag"
          ],
          "argument": "CONNECTOR_TAG",
          "description": "üîó Connector version to use\n\nBy default, for each connector, the latest available version on Confluent Hub is used\n\nüéì Tip: set to \" \" in order to select the version dynamically\n\nConflicts with: --connector-zip\n"
        },
        {
          "names": [
            "--connector-zip"
          ],
          "argument": "CONNECTOR_ZIP",
          "description": "ü§ê Connector zip to use\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion \n        use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files\n        use <option+enter> to use the value you typed manually\n\nConflicts with: --connector-tag\n"
        },
        {
          "names": [
            "--connector-jar"
          ],
          "argument": "CONNECTOR_JAR",
          "description": "ü§é Connector jar to use\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion \n        use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files\n        use <option+enter> to use the value you typed manually\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "open",
      "description": "üëê When --file is not provided, simply open last example you ran with <playground run>\n\nOtherwise, open any file from the playground using --file.\n",
      "usage": "playground open [OPTIONS]",
      "options": [
        {
          "names": [
            "--file",
            "-f"
          ],
          "argument": "FILE",
          "description": "üîé Search any file and open it.\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion\n        use <option+enter> to use the value you typed manually\n"
        },
        {
          "names": [
            "--open-docker-compose"
          ],
          "argument": "",
          "description": "üê≥ Also open associated docker-compose file for the current example\n"
        },
        {
          "names": [
            "--wait"
          ],
          "argument": "",
          "description": "üò¥ Wait\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "stop",
      "description": "üõë Stop currently running example\n",
      "usage": "playground stop",
      "options": [],
      "subcommands": null
    },
    {
      "name": "remove-all-docker-images",
      "description": "üß® Remove all docker images (including docker volumes)\n",
      "usage": "playground remove-all-docker-images",
      "options": [],
      "subcommands": null
    },
    {
      "name": "remove-cp-docker-images",
      "description": "üßπ Remove all Confluent Platform docker images related to a version installed locally (a confirmation will be required for every version present)\n",
      "usage": "playground remove-cp-docker-images [OPTIONS]",
      "options": [
        {
          "names": [
            "--version"
          ],
          "argument": "VERSION",
          "description": "üî¢ Specific version to remove\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "refresh-cp-docker-images",
      "description": "üîÑ Refresh (pull from Docker) all Confluent Platform docker images related to a version installed locally\n\n    It also refreshes images for aws, gcp and azure cli\n",
      "usage": "playground refresh-cp-docker-images [OPTIONS]",
      "options": [
        {
          "names": [
            "--version"
          ],
          "argument": "VERSION",
          "description": "üî¢ Specific version to pull \n\nRequired: ‚úì Yes\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "cleanup-cloud-details",
      "description": "üßº playground is actively caching ccloud details (https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%8c%a4%ef%b8%8f-confluent-cloud-examples)\n   use this command if you notice that the playground is using unexpected ccloud details\n",
      "usage": "playground cleanup-cloud-details",
      "options": [],
      "subcommands": null
    },
    {
      "name": "open-docs",
      "description": "üßë‚Äçüéì Open Confluent documentation of currently running example\n",
      "usage": "playground open-docs [OPTIONS]",
      "options": [
        {
          "names": [
            "--only-show-url"
          ],
          "argument": "",
          "description": "üåê Only show url\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "open-changelog",
      "description": "üìú Open playground changelog (https://kafka-docker-playground.io/#/changelog)\n",
      "usage": "playground open-changelog [OPTIONS]",
      "options": [
        {
          "names": [
            "--only-show-url"
          ],
          "argument": "",
          "description": "üåê Only show url\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "cleanup-cloud-resources",
      "description": "üßπ Cleanup cloud resources that were created by running examples from the playground\n\n‚ùóit will remove all resources created by the playground, including topics, connectors, clusters, buckets, redshift cluster, etc...\n",
      "usage": "playground cleanup-cloud-resources [OPTIONS]",
      "options": [
        {
          "names": [
            "--force"
          ],
          "argument": "",
          "description": "‚ò¢Ô∏è do not ask for confirmation\n\n‚ùóuse with caution\n"
        },
        {
          "names": [
            "--user"
          ],
          "argument": "USER",
          "description": "‚ò¢Ô∏è force user\n"
        },
        {
          "names": [
            "--resource"
          ],
          "argument": [
            "aws",
            "gcp",
            "azure",
            "ccloud",
            "salesforce"
          ],
          "description": "üõÅ resource to cleanup\n\nIf not provided, all of them are cleaned up\n\nüéì Tip: you can pass multiple resources by specifying --resource multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: [\"aws\", \"gcp\", \"azure\", \"ccloud\", \"salesforce\"]\n\nAllowed values: aws, gcp, azure, ccloud, salesforce\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "repro",
      "description": "üë∑‚Äç‚ôÇÔ∏è Reproduction model commands\n",
      "usage": "playground repro COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "export",
          "description": "üì§ Export as tgz file uncommitted reproduction models from the folder of current reproduction model\n",
          "usage": "playground repro export [OPTIONS]",
          "options": [
            {
              "names": [
                "--all"
              ],
              "argument": "",
              "description": "Export all uncommitted reproduction models\n"
            }
          ]
        },
        {
          "name": "import",
          "description": "üì• Import tgz file which was created with export command\n",
          "usage": "playground repro import [OPTIONS]",
          "options": [
            {
              "names": [
                "--file",
                "-f"
              ],
              "argument": "FILE",
              "description": "ü§ê playground_repro_export.tgz file\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion \n        use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files\n"
            }
          ]
        },
        {
          "name": "bootstrap",
          "description": "üõ†  Bootstrap reproduction model, just run <playground repro bootstrap> !\n  \n  üî• HIGHLY RECOMMENDED: start in interactive mode by simple running <playground repro bootstrap> !\n  \n  üëâ Check documentation https://kafka-docker-playground.io/#/reusables?id=%f0%9f%9b%a0-bootstrap-reproduction-model\n",
          "usage": "playground repro bootstrap [OPTIONS]",
          "options": [
            {
              "names": [
                "--file",
                "-f"
              ],
              "argument": "FILE",
              "description": "üîñ Example file to use as basis, if not set, currently running example is used\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion\n"
            },
            {
              "names": [
                "--description",
                "-d"
              ],
              "argument": "DESCRIPTION",
              "description": "üí≠ Description for the reproduction model\n"
            },
            {
              "names": [
                "--producer",
                "-p"
              ],
              "argument": "none",
              "description": "ü§é Java producer type to use\n\nOne of avro, avro-with-key, protobuf, protobuf-with-key, json-schema, json-schema-with-key\n\nüéì Tip: Most of times, it's much simpler to use 'playground topic produce'. Use java producer only if you have very specific requirements such as specifying record timestamp or to do perf testing (even though CLI is also good for that)\n\nüéì Tip: 'with-key' will also produce key with selected converter, otherwise LongConverter is used\n\nDefault value: none\n\nAllowed values: none, avro, avro-with-key, protobuf, protobuf-with-key, json-schema, json-schema-with-key\n\nConflicts with: --pipeline\n"
            },
            {
              "names": [
                "--nb-producers",
                "-n"
              ],
              "argument": "NB-PRODUCERS",
              "description": "2Ô∏è‚É£ Number of java producers to generate\n"
            },
            {
              "names": [
                "--producer-schema-key"
              ],
              "argument": "",
              "description": "üî∞ Schema to use for the key\n\n‚ú® Copy and paste the schema you want to use for the key, save and close the file to continue\n"
            },
            {
              "names": [
                "--producer-schema-value"
              ],
              "argument": "",
              "description": "üî∞ Schema to use for the value\n\n‚ú® Copy and paste the schema you want to use for the key, save and close the file to continue\n"
            },
            {
              "names": [
                "--custom-smt"
              ],
              "argument": "",
              "description": "üîß Add a custom SMT (which is a no-op)\n"
            },
            {
              "names": [
                "--pipeline"
              ],
              "argument": "SINK_FILE",
              "description": "üîñ Sink example file to use for creating a pipeline. multiple --pipeline flags can be used to create a pipeline with multiple sinks.\n\n‚ùï It must be absolute full path. \n\nüéì Tip: use <tab> completion to trigger fzf completion\n\nRepeatable: ‚úì Yes\n\nConflicts with: --producer\n"
            }
          ]
        }
      ]
    },
    {
      "name": "get-docker-compose",
      "description": "üêã Get docker-compose\n",
      "usage": "playground get-docker-compose",
      "options": [],
      "subcommands": null
    },
    {
      "name": "schema",
      "description": "üî∞ Schema commands\n",
      "usage": "playground schema COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "get",
          "description": "üî∞ Get all schemas versions for specified subject (if --subject is not specified, all subjects will be used)\n",
          "usage": "playground schema get [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nConflicts with: id\n"
            },
            {
              "names": [
                "--id"
              ],
              "argument": "ID",
              "description": "üíØ Schema id\n\nConflicts with: subject, deleted\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--deleted"
              ],
              "argument": "",
              "description": "üßü Include soft deleted subjects\n\nConflicts with: id\n"
            },
            {
              "names": [
                "--store-in-tmp"
              ],
              "argument": "FOLDER",
              "description": "store in /tmp folder\n"
            }
          ]
        },
        {
          "name": "register",
          "description": "‚è∫Ô∏è Register a schema in specified subject\n",
          "usage": "playground schema register [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--schema"
              ],
              "argument": "SCHEMA",
              "description": "üî• You can either:\n\n* Set your own schema (avro, json-schema, protobuf) with stdin (see example section). \n\n* Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion\n\nDefault value: -\n"
            },
            {
              "names": [
                "--id"
              ],
              "argument": "ID",
              "description": "‚ò¢Ô∏è Force schema id\n\n‚ùóit will replace any schema which already exists at given id\n"
            },
            {
              "names": [
                "--metadata-property"
              ],
              "argument": "METADATA-PROPERTY",
              "description": "üü° Add metadata properties to schema contract\n\nSee docs: https://docs.confluent.io/platform/current/schema-registry/fundamentals/data-contracts.html#metadata-properties\n\nüéì Tip: you can pass multiple properties by specifying --metadata-property multiple times\n\nExample: --metadata-property \"metadata1=value\" --metadata-property \"metadata2=value\"\n\nRepeatable: ‚úì Yes\n"
            }
          ]
        },
        {
          "name": "get-compatibility",
          "description": "üõ°Ô∏è Get subject-level compatibility\n",
          "usage": "playground schema get-compatibility [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "set-compatibility",
          "description": "üõ°Ô∏è Set subject-level compatibility\n",
          "usage": "playground schema set-compatibility [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--compatibility"
              ],
              "argument": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "description": "Schema Registry compatibility rule\n\nRequired: ‚úì Yes\n\nAllowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE\n"
            }
          ]
        },
        {
          "name": "get-mode",
          "description": "üîè Get subject-level mode\n",
          "usage": "playground schema get-mode [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "set-mode",
          "description": "üîè Set subject-level mode\n  \n  To enable mode changes on a Schema Registry cluster, you must also set mode.mutability=true in the Schema Registry properties file before starting Schema Registry\n",
          "usage": "playground schema set-mode [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--mode"
              ],
              "argument": [
                "IMPORT",
                "READONLY",
                "READWRITE"
              ],
              "description": "Schema Registry mode\n\nRequired: ‚úì Yes\n\nAllowed values: IMPORT, READONLY, READWRITE\n"
            }
          ]
        },
        {
          "name": "set-normalize",
          "description": "üßΩ Set normalize at schema registry level\n  \n  See https://docs.confluent.io/platform/current/schema-registry/fundamentals/serdes-develop/index.html#schema-normalization\n",
          "usage": "playground schema set-normalize [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--value"
              ],
              "argument": [
                true,
                false
              ],
              "description": "true or false\n\nRequired: ‚úì Yes\n\nAllowed values: true, false\n"
            }
          ]
        },
        {
          "name": "delete",
          "description": "üßü Delete schema\n",
          "usage": "playground schema delete [OPTIONS]",
          "options": [
            {
              "names": [
                "--subject"
              ],
              "argument": "SUBJECT",
              "description": "üìõ Subject name to delete:\n  \n  if --version is provided, only that version will be deleted. Otherwise the complete subject will be deleted\n"
            },
            {
              "names": [
                "--version"
              ],
              "argument": "VERSION",
              "description": "üî¢ Schema version of the provided subject to delete\n\nCan only be used when --subject is provided\n"
            },
            {
              "names": [
                "--permanent"
              ],
              "argument": "",
              "description": "üíÄ Hard delete (default is soft delete)\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "derive-schema",
          "description": "ü™Ñ Derive a schema based on payload\n",
          "usage": "playground schema derive-schema [OPTIONS]",
          "options": [
            {
              "names": [
                "--payload"
              ],
              "argument": "PAYLOAD",
              "description": "üì¶ Payload to derive schema from\n\nDefault value: -\n"
            },
            {
              "names": [
                "--schema-type"
              ],
              "argument": "AVRO",
              "description": "üß© Schema Registry schema \"type\":\n\n- AVRO\n- JSON (json schema)\n- PROTOBUF\n\nDefault is AVRO\n\nDefault value: AVRO\n\nAllowed values: AVRO, JSON, PROTOBUF\n"
            }
          ]
        }
      ]
    },
    {
      "name": "tcp-proxy",
      "description": "üèö Zazkia TCP Proxy commands\n\nSimulate TCP connection issues (reset,delay,throttle,corrupt) using emicklei/zazkia (https://github.com/emicklei/zazkia) TCP proxy\n",
      "usage": "playground tcp-proxy COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "start",
          "description": "üíó Start the TCP proxy and automatically replace connector config with zazkia hostname and port 49998\n",
          "usage": "playground tcp-proxy start [OPTIONS]",
          "options": [
            {
              "names": [
                "--hostname"
              ],
              "argument": "HOSTNAME",
              "description": "Hostname used by the tcp proxy to forward request\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--port"
              ],
              "argument": "PORT",
              "description": "Port used by the tcp proxy to forward request\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--throttle-service-response"
              ],
              "argument": 0,
              "description": "üêå Throttle service response. This is bytes per second.\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--delay-service-response"
              ],
              "argument": 0,
              "description": "‚è≤Ô∏è Add milliseconds delay to service response. Default is 0 ms.\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--break-service-response"
              ],
              "argument": 0,
              "description": "üíî Percentage of broken connections. Default is 0%.\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--service-response-corrupt"
              ],
              "argument": "",
              "description": "ü¶π‚Äç‚ôÇÔ∏è Corrupt service response with random mangled bytes. By default, there is no corruption.\n"
            },
            {
              "names": [
                "--skip-automatic-connector-config"
              ],
              "argument": "",
              "description": "ü§ñ By default, script will attempt to modify automatically the running connector config to use Zazkia proxy.\n\nThis flag allows to skip this automatic configuration (only useful if you want to manually update connector config with zazkia tcp proxy details)\n"
            }
          ]
        },
        {
          "name": "get-connections",
          "description": "üß≤ Get Zazkia active TCP connections config and stats\n",
          "usage": "playground tcp-proxy get-connections [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "delay",
          "description": "‚è≤Ô∏è Add milliseconds delay to service response.\n  Set it to 0 to remove the delay.\n",
          "usage": "playground tcp-proxy delay [OPTIONS]",
          "options": [
            {
              "names": [
                "--delay-service-response"
              ],
              "argument": "DELAY-SERVICE-RESPONSE",
              "description": "‚è≤Ô∏è Add milliseconds delay to service response.\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "break",
          "description": "üíî Break sending the response to the client.\n  Set it to 0% to remove the delay.\n",
          "usage": "playground tcp-proxy break [OPTIONS]",
          "options": [
            {
              "names": [
                "--break-service-response"
              ],
              "argument": "BREAK-SERVICE-RESPONSE",
              "description": "üíî Percentage of broken connections.\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "close-connection",
          "description": "‚ùå Close the Zazkia active TCP connections\n",
          "usage": "playground tcp-proxy close-connection [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "close-all-connection-with-error",
          "description": "üßπ Close all Zazkia TCP connections which are in error state (close all with error button in Zazkia UI)\n",
          "usage": "playground tcp-proxy close-all-connection-with-error",
          "options": []
        },
        {
          "name": "toggle-accept-connections",
          "description": "üôÖ‚Äç‚ôÇÔ∏è Change whether new connections can be accepted\n",
          "usage": "playground tcp-proxy toggle-accept-connections",
          "options": []
        },
        {
          "name": "toggle-reads-client",
          "description": "‚úÖ Change whether reading data from the client is enabled.\n  \n    See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)\n",
          "usage": "playground tcp-proxy toggle-reads-client [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "toggle-reads-service",
          "description": "‚úÖ Change whether reading data from the service is enabled.\n  \n    See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)\n",
          "usage": "playground tcp-proxy toggle-reads-service [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "toggle-writes-client",
          "description": "‚úÖ Change whether writing data to the client is enabled.\n  \n    See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)\n",
          "usage": "playground tcp-proxy toggle-writes-client [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "toggle-writes-service",
          "description": "‚úÖ Change whether reading data to the service is enabled.\n  \n    See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)\n",
          "usage": "playground tcp-proxy toggle-writes-service [OPTIONS]",
          "options": [
            {
              "names": [
                "--connection-id"
              ],
              "argument": "CONNECTION-ID",
              "description": "üß≤ Zazkia TCP connection id\n      \n"
            }
          ]
        },
        {
          "name": "open-ui",
          "description": "üåê Just open Zazkia UI (http://localhost:9191) in your browser\n",
          "usage": "playground tcp-proxy open-ui",
          "options": []
        }
      ]
    },
    {
      "name": "tools",
      "description": "üß∞ Tools commands\n",
      "usage": "playground tools COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "install-vscode-extension",
          "description": "ü™Ñ Install a slightly modified version of \"Shell Script Command Completion\" Visual Studio Code extension (https://marketplace.visualstudio.com/items?itemName=tetradresearch.vscode-h2o)\n  \n  After installation, install \"playground\" command:\n  \n  * Go on a .sh file\n  \n  * Type Ctrl+Shift+P (or ‚åò+‚áß+P on macOS) and choose \"Shell Completion: Load Command Spec (experimental)\"\" and then type \"playground\"\n  \n  üëâ Check documentation https://kafka-docker-playground.io/#/cli?id=%f0%9f%aa%84-setup-shell-script-command-completion-visual-studio-code-extension\n",
          "usage": "playground tools install-vscode-extension",
          "options": []
        },
        {
          "name": "read-avro-file",
          "description": "üîñ Read provided avro file\n",
          "usage": "playground tools read-avro-file [OPTIONS]",
          "options": [
            {
              "names": [
                "--file",
                "-f"
              ],
              "argument": "FILE",
              "description": "üîñ Avro file to read\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion\n        use <option+enter> to use the value you typed manually\n"
            }
          ]
        },
        {
          "name": "read-parquet-file",
          "description": "üîñ Read provided parquet file\n",
          "usage": "playground tools read-parquet-file [OPTIONS]",
          "options": [
            {
              "names": [
                "--file",
                "-f"
              ],
              "argument": "FILE",
              "description": "üîñ Parquet file to read\n\n‚ùï It must be absolute full path\n\nüéì Tip: use <tab> completion to trigger fzf completion\n        use <option+enter> to use the value you typed manually\n"
            }
          ]
        },
        {
          "name": "certs-create",
          "description": "üîê Generate keys and certificates used for SSL\n",
          "usage": "playground tools certs-create [OPTIONS]",
          "options": [
            {
              "names": [
                "--container"
              ],
              "argument": [
                "broker",
                "broker2",
                "broker3",
                "client",
                "schema-registry",
                "restproxy",
                "connect",
                "connect2",
                "connect3",
                "control-center",
                "clientrestproxy",
                "ksqldb-server",
                "conduktor"
              ],
              "description": "üê≥ container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: [\"broker\", \"broker2\", \"broker3\", \"client\", \"schema-registry\", \"restproxy\", \"connect\", \"connect2\", \"connect3\", \"control-center\", \"clientrestproxy\", \"ksqldb-server\", \"conduktor\"]\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--output-folder"
              ],
              "argument": "FOLDER",
              "description": "üìÅ Folder where certificates are created\n\nRequired: ‚úì Yes\n"
            }
          ]
        }
      ]
    },
    {
      "name": "debug",
      "description": "üêû Debug commands\n",
      "usage": "playground debug COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "enable-remote-debugging",
          "description": "‚ú® Enable java remote debugging for container\n  \n  üëâ Check documentation https://kafka-docker-playground.io/#/reusables?id=%e2%9c%a8-remote-debugging\n",
          "usage": "playground debug enable-remote-debugging [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "testssl",
          "description": "üîê Testing TLS/SSL encryption using https://testssl.sh/\n",
          "usage": "playground debug testssl [OPTIONS] [--] [TESTSSL ARGUMENTS...]",
          "options": [
            {
              "names": [
                "--uri"
              ],
              "argument": "URI",
              "description": "host|host:port|URL|URL:port   port 443 is default, URL can only contain HTTPS protocol\n\nRequired: ‚úì Yes\n"
            }
          ]
        },
        {
          "name": "generate-diagnostics",
          "description": "‚õëÔ∏è Generate a diagnostic bundle with Diagnostics Bundle Tool\n  \n  ‚ö†Ô∏è only connect and broker containers are supported for now\n  \n  see https://docs.confluent.io/platform/current/tools/diagnostics-tool.html#collect-diagnostics\n",
          "usage": "playground debug generate-diagnostics [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "thread-dump",
          "description": "üéØ Take a java thread dump\n  \n  üîñ It will save output to a file and open with text editor set with playground config editor <editor> (default is code)\n",
          "usage": "playground debug thread-dump [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "heap-dump",
          "description": "üëª Take a heap dump\n  \n  üîñ It will save output to a .hprof file. VisualVM (https://visualvm.github.io/) or MAT (https://www.eclipse.org/mat/) can be used to read the file.\n  \n  It will run a full gc first. If you don't want this, use \n",
          "usage": "playground debug heap-dump [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--live"
              ],
              "argument": "",
              "description": "üß¨ dump only live objects; if not specified, all objects in the heap are dumped\n"
            },
            {
              "names": [
                "--histo"
              ],
              "argument": "",
              "description": "üìä print histogram of java object heap\n"
            }
          ]
        },
        {
          "name": "tcp-dump",
          "description": "üïµÔ∏è‚Äç‚ôÇÔ∏è Take a tcp dump (sniffing network)\n",
          "usage": "playground debug tcp-dump [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--port"
              ],
              "argument": "PORT",
              "description": "Port on which tcp dump should be done, if not set sniffing is done on every port\n"
            },
            {
              "names": [
                "--duration"
              ],
              "argument": 30,
              "description": "Duration of the dump (default is 30 seconds).\n\nDefault value: 30\n"
            }
          ]
        },
        {
          "name": "block-traffic",
          "description": "üö´ Blocking traffic using iptables\n",
          "usage": "playground debug block-traffic [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--destination"
              ],
              "argument": "DESTINATION",
              "description": "Destination: it could be an ip address, a container name or a hostname\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--port"
              ],
              "argument": "PORT",
              "description": "Port on which tcp traffic should be blocked\n"
            },
            {
              "names": [
                "--action"
              ],
              "argument": [
                "start",
                "stop"
              ],
              "description": "üü¢ start or stop\n\nRequired: ‚úì Yes\n\nAllowed values: start, stop\n"
            }
          ]
        },
        {
          "name": "java-debug",
          "description": "ü§é JVM arguments for SSL, Kerberos or Class Loading\n",
          "usage": "playground debug java-debug [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--type"
              ],
              "argument": [
                "ssl_all",
                "ssl_handshake",
                "class_loading",
                "kerberos"
              ],
              "description": "- ssl_all: Enable all SSL debugging, i.e -Djavax.net.debug=all\n- ssl_handshake: Enable SSL handshake debugging, i.e -Djavax.net.debug=ssl:handshake\n- class_loading: Enable class loading debugging, i.e -verbose:class\n- kerberos: Enable Kerberos debugging, i.e -Dsun.security.krb5.debug=true\n\nRequired: ‚úì Yes\n\nAllowed values: ssl_all, ssl_handshake, class_loading, kerberos\n"
            },
            {
              "names": [
                "--action"
              ],
              "argument": "enable",
              "description": "üü¢ enable or disable\n\nDefault value: enable\n\nAllowed values: enable, disable\n"
            }
          ]
        },
        {
          "name": "jscissors",
          "description": "‚úÇÔ∏è jscissors is an instrumentation framework and can help to analyse control flow and perform some specific logging\n  \n  * Control Flow Tracing: By dynamically instrumenting Java code, the tool meticulously tracks the precise sequence of executed methods at runtime. This capability offers invaluable insights into how an application navigates its logic. The tool provides a way to generate a stack trace when a method is called. \n  * Additional Logging: This enhanced logging capability provides a way to print the input arguments to a method and return value from a method. \n  * Delve into heap area: Generating heap dump at a method call will be crucial to analyze the state of JVM at a given point. The tool has capabilities to generate thread dump as well to track the state of all the threads when a method is called. \n",
          "usage": "playground debug jscissors [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--operation"
              ],
              "argument": [
                "VALUES",
                "RETURN_VALUE",
                "DELAY",
                "STACK"
              ],
              "description": "ü•º operation to perform:\n\n* VALUES: print method input arguments\n* RETURN_VALUE: print method return value\n* THREADS: print thread dump when method is called\n* HEAP: print heap dump when method is called\n* STACK: print stack trace when method is called\n* EXCEPTION_HEAP: print heap dump when an exception is thrown during method execution\n* DELAY: print time taken for method execution\n\nDefault values: VALUES, RETURN_VALUE, DELAY and STACK\n\nüéì Tip: you can pass multiple operations by specifying --operation multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: [\"VALUES\", \"RETURN_VALUE\", \"DELAY\", \"STACK\"]\n\nAllowed values: VALUES, RETURN_VALUE, THREADS, HEAP, STACK, EXCEPTION_HEAP, DELAY\n"
            },
            {
              "names": [
                "--class"
              ],
              "argument": "CLASS",
              "description": "class name to instrument (it supports regex like oracle.jdbc.*)\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--method"
              ],
              "argument": ".*",
              "description": "method name to instrument (it supports regex like .*find.*)\n\nDefault value: .*\n"
            },
            {
              "names": [
                "--action"
              ],
              "argument": "enable",
              "description": "üü¢ enable or disable\n\nDefault value: enable\n\nAllowed values: enable, disable\n"
            }
          ]
        },
        {
          "name": "flight-recorder",
          "description": "üõ©Ô∏è Record flight recorder\n  \n  Read more about it at https://www.baeldung.com/java-flight-recorder-monitoring\n  \n  Open the jfr file with JDK Mission Control JMC(https://jdk.java.net/jmc/)\n",
          "usage": "playground debug flight-recorder [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--action"
              ],
              "argument": "enable",
              "description": "üü¢ enable or disable\n\nDefault value: enable\n\nAllowed values: enable, disable\n"
            }
          ]
        },
        {
          "name": "log-level",
          "description": "üß¨ Set log level for any package\n",
          "usage": "playground debug log-level COMMAND",
          "options": []
        }
      ]
    },
    {
      "name": "log-level",
      "description": "üß¨ Set log level for any package\n",
      "usage": "playground debug log-level COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "get",
          "description": "Get log levels\n",
          "usage": "playground debug log-level get [OPTIONS]",
          "options": [
            {
              "names": [
                "--package",
                "-p"
              ],
              "argument": "PACKAGE",
              "description": "Package name\n"
            }
          ]
        },
        {
          "name": "set",
          "description": "Set log level for specific logger\n",
          "usage": "playground debug log-level set [OPTIONS]",
          "options": [
            {
              "names": [
                "--package",
                "-p"
              ],
              "argument": "PACKAGE",
              "description": "üì¶ Package name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--level",
                "-l"
              ],
              "argument": [
                "INFO",
                "WARN",
                "DEBUG",
                "TRACE"
              ],
              "description": "‚ùïLog level\n\nRequired: ‚úì Yes\n\nAllowed values: INFO, WARN, DEBUG, TRACE\n"
            }
          ]
        }
      ]
    },
    {
      "name": "get-jmx-metrics",
      "description": "üî¢ Get JMX metrics from a container\n\nüëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%94%a2-jmx-metrics\n",
      "usage": "playground get-jmx-metrics [OPTIONS]",
      "options": [
        {
          "names": [
            "--container",
            "-c"
          ],
          "argument": "connect",
          "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
        },
        {
          "names": [
            "--open",
            "-o"
          ],
          "argument": "",
          "description": "üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)\n"
        },
        {
          "names": [
            "--domain",
            "-d"
          ],
          "argument": "DOMAIN",
          "description": "Domain name\n"
        }
      ],
      "subcommands": null
    },
    {
      "name": "container",
      "description": "üê≥ Container commands\n",
      "usage": "playground container COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "get-properties",
          "description": "üìù Get properties file from a container\n  \n  üëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%93%9d-see-properties-file\n",
          "usage": "playground container get-properties [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "recreate",
          "description": "üí´ Recreate container(s)\n  \n  üëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%e2%99%bb%ef%b8%8f-re-create-containers\n",
          "usage": "playground container recreate [OPTIONS]",
          "options": [
            {
              "names": [
                "--ignore-current-versions"
              ],
              "argument": "",
              "description": "Ignore current confluent platform version\n\nBy default, the current version is used\n"
            }
          ]
        },
        {
          "name": "get-ip-addresses",
          "description": "üñ•Ô∏è  Get ip address of running containers\n",
          "usage": "playground container get-ip-addresses",
          "options": []
        },
        {
          "name": "kill-all",
          "description": "üíÄ Kill all containers\n",
          "usage": "playground container kill-all",
          "options": []
        },
        {
          "name": "logs",
          "description": "üïµÔ∏è  Tail and follow container logs\n",
          "usage": "playground container logs [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--open",
                "-o"
              ],
              "argument": "",
              "description": "üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)\n\nConflicts with: --wait-for-log\n"
            },
            {
              "names": [
                "--wait-for-log",
                "-w"
              ],
              "argument": "LOG",
              "description": "üò¥ Wait until log appears\n\nConflicts with: --open\n"
            },
            {
              "names": [
                "--max-wait",
                "-m"
              ],
              "argument": 600,
              "description": "‚è≥ Max time in seconds to wait when using --wait-for-log (default 600s)\n\nDefault value: 600\n\nConflicts with: --open\n"
            }
          ]
        },
        {
          "name": "display-error-all-containers",
          "description": "üî• Display all ERROR/FATAL logs in all containers. Useful for quick troubleshooting\n",
          "usage": "playground container display-error-all-containers",
          "options": []
        },
        {
          "name": "ssh",
          "description": "üõ¨ SSH into container\n",
          "usage": "playground container ssh [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--shell",
                "-s"
              ],
              "argument": "bash",
              "description": "üíæ Shell to use (default is bash)\n\nDefault value: bash\n\nAllowed values: bash, sh, ksh, zsh\n"
            }
          ]
        },
        {
          "name": "change-jdk",
          "description": "ü§é Change java JDK version using Azul JDK (https://www.azul.com/downloads/#downloads-table-zulu)\n  \n  PS: It works for UBI8 docker images only\n",
          "usage": "playground container change-jdk [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--version"
              ],
              "argument": [
                8,
                11,
                17,
                21,
                22
              ],
              "description": "ü§é JDK version to use\n\nRequired: ‚úì Yes\n\nAllowed values: 8, 11, 17, 21, 22\n"
            }
          ]
        },
        {
          "name": "exec",
          "description": "ü™Ñ Execute command in a container\n",
          "usage": "playground container exec [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--command"
              ],
              "argument": "COMMAND",
              "description": "üì≤ Command to execute\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--root"
              ],
              "argument": "",
              "description": "üëë Run command as root\n"
            },
            {
              "names": [
                "--shell"
              ],
              "argument": "bash",
              "description": "üíæ Shell to use (default is bash)\n\nDefault value: bash\n\nAllowed values: bash, sh, ksh, zsh\n"
            }
          ]
        },
        {
          "name": "restart",
          "description": "üîÅ Restart a container\n",
          "usage": "playground container restart [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "pause",
          "description": "‚è∏Ô∏è  Pause a container\n",
          "usage": "playground container pause [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "resume",
          "description": "‚èØÔ∏è  Resume a container\n",
          "usage": "playground container resume [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "kill",
          "description": "üî´ Kill a container\n",
          "usage": "playground container kill [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            }
          ]
        },
        {
          "name": "set-environment-variables",
          "description": "üì¶  Set environment variable(s) for a container\n  \n  üéì Tip: you can pass multiple environment variables by specifying --env multiple times\n  \n  Example: --env \"KAFKA_OPTS: -verbose:class\" --env \"CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR,org.apache.kafka.connect.runtime.rest.RestServer=ERROR\"\n",
          "usage": "playground container set-environment-variables [OPTIONS]",
          "options": [
            {
              "names": [
                "--container",
                "-c"
              ],
              "argument": "connect",
              "description": "üê≥ Container name\n\nüéì Tip: you can pass multiple containers by specifying --container multiple times\n\nRepeatable: ‚úì Yes\n\nDefault value: connect\n"
            },
            {
              "names": [
                "--env"
              ],
              "argument": "ENV",
              "description": "üì¶ Environment variables to set\n\nüéì Tip: you can pass multiple environment variables by specifying --env multiple times\n\nRepeatable: ‚úì Yes\n\nConflicts with: --restore-original-values\n"
            },
            {
              "names": [
                "--restore-original-values"
              ],
              "argument": "",
              "description": "üßΩ Restore back original values before any changes was made\n\nConflicts with: --env\n"
            },
            {
              "names": [
                "--mount-jscissors-files"
              ],
              "argument": "",
              "description": "Mount jscissors files for debugging\n"
            }
          ]
        }
      ]
    },
    {
      "name": "topic",
      "description": "üó≥ Topic commands\n",
      "usage": "playground topic COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "get-number-records",
          "description": "üíØ Get number of records in a topic\n",
          "usage": "playground topic get-number-records [OPTIONS]",
          "options": [
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n"
            }
          ]
        },
        {
          "name": "display-consumer-offsets",
          "description": "üì≠ Display content of __consumer_offsets topic\n",
          "usage": "playground topic display-consumer-offsets [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "list",
          "description": "üîò List topics\n",
          "usage": "playground topic list",
          "options": []
        },
        {
          "name": "describe",
          "description": "üî¨ Describe topic\n",
          "usage": "playground topic describe [OPTIONS]",
          "options": [
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "set-schema-compatibility",
          "description": "üõ°Ô∏è Change topic's schema compatibility\n",
          "usage": "playground topic set-schema-compatibility [OPTIONS]",
          "options": [
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n"
            },
            {
              "names": [
                "--compatibility"
              ],
              "argument": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "description": "Schema Registry compatibility rule\n\nRequired: ‚úì Yes\n\nAllowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "consume",
          "description": "üì• Consume topic from beginning\n",
          "usage": "playground topic consume [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n"
            },
            {
              "names": [
                "--max-messages"
              ],
              "argument": 100,
              "description": "Max number of messages to display (default is 100)\n\nYou can use -1 to display all messages\n\nDefault value: 100\n"
            },
            {
              "names": [
                "--min-expected-messages"
              ],
              "argument": 0,
              "description": "Minimum expected number of messages to be present in topic, returns an error if this is not the case\n\nNote: --topic should be specified in this case.\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--grep"
              ],
              "argument": null,
              "description": "Verify that topic content contains record which contains specified string\n\nDefault value: \n"
            },
            {
              "names": [
                "--timeout"
              ],
              "argument": 60,
              "description": "Max number of seconds to wait when --min-expected-messages is used.\n\nDefault is 60 seconds\n\nDefault value: 60\n"
            },
            {
              "names": [
                "--tail"
              ],
              "argument": "",
              "description": "Tail on logs.\n\nConflicts with: --min-expected-messages, --max-messages, --open\n"
            },
            {
              "names": [
                "--plot-latencies-timestamp-field"
              ],
              "argument": "TIMESTAMP",
              "description": "üó≥ Timestamp field name that represents when record was created in source system\n"
            },
            {
              "names": [
                "--key-subject"
              ],
              "argument": "KEY-SUBJECT",
              "description": "üìõ Subject for key in schema-registry to use (useful when data was produced with --key-subject-name-strategy other than TopicNameStrategy)\n\nNote: --topic should be specified in this case.\n"
            },
            {
              "names": [
                "--value-subject"
              ],
              "argument": "VALUE-SUBJECT",
              "description": "üìõ Subject for value in schema-registry to use (useful when data was produced with --value-subject-name-strategy other than TopicNameStrategy)\n\nNote: --topic should be specified in this case.\n"
            },
            {
              "names": [
                "--max-characters"
              ],
              "argument": 3000,
              "description": "Max characters per message to display (default is 3000)\n\nDefault value: 3000\n"
            },
            {
              "names": [
                "--open",
                "-o"
              ],
              "argument": "",
              "description": "üîñ Save full dump of topic to a file and open with text editor set with playground config editor <editor> (default is code)\n\nConflicts with: --max-characters, --tail, --min-expected-messages\n"
            }
          ]
        },
        {
          "name": "produce",
          "description": "üì§ Produce to a topic\n  \n  See video tutorial https://youtu.be/mbzHCewG_XE\n",
          "usage": "playground topic produce [OPTIONS]",
          "options": [
            {
              "names": [
                "--key"
              ],
              "argument": "KEY",
              "description": "üóùÔ∏è Key to use. If not set, no key is used.\n\nüî• You can either:\n\n* Set your own schema (avro, json-schema, protobuf) within single quotes (see examples) \n\n* You can also generate json data using json or sql format using syntax from https://github.com/MaterializeInc/datagen\n\n* Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion\n\n* Directly set payload (\"%g\" can be used to generate a counter)\n\nIn case of 'raw' data (i.e not using schema):\n\nIf the key contain a number, it will be used as starting point and incremented for each record. \n\nExample: key1 will start with key1, then key2, etc..\nExample: mykey-10-suffix will start with mykey-10-suffix then mykey-11-suffix, etc..\n\n\"%g\" can also be used to generate a counter\n\nExample: key%g will start with key1, then key2, etc..\n\nOtherwise, the key will be same for all records.\n"
            },
            {
              "names": [
                "--value"
              ],
              "argument": "VALUE",
              "description": "üî• You can either:\n\n* Set your own schema (avro, json-schema, protobuf) with stdin (see example section). \n\n* You can also generate json data using json or sql format using syntax from https://github.com/MaterializeInc/datagen\n\n* Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion\n\n* Directly set payload (\"%g\" can be used to generate a counter)\n\nDefault value: -\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--debug",
                "-d"
              ],
              "argument": "",
              "description": "debug mode (internal)\n"
            },
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--nb-messages"
              ],
              "argument": 1,
              "description": "üíØ Number of messages to produce (default is 1)\n   \nüéì  - if > <value of --max-nb-messages-per-batch> (default 300000), messages will be sent in batches of <value of --max-nb-messages-per-batch> (default 300000) records\n    - if you set it to -1, an infinite number of records will also be sent in batches\n\nDefault value: 1\n"
            },
            {
              "names": [
                "--max-nb-messages-per-batch"
              ],
              "argument": 300000,
              "description": "üîº Max number of messages to send per batch when --nb-messages > --max-nb-messages-per-batch\n   if --nb-messages is set to -1, this is the number of messages sent per batch\n   default is 300000\n\nDefault value: 300000\n"
            },
            {
              "names": [
                "--max-nb-messages-to-generate"
              ],
              "argument": "MAX-NB-MESSAGES-TO-GENERATE",
              "description": "üî® Max number of different messages to generate.\n\n   - when protobuf is used, default is 50 as protobuf generation is really slow\n   - when --record-size is set, default is 100\n   --when nb-messages is set to -1, default is 1000\n   - otherwise default is 100000\n"
            },
            {
              "names": [
                "--sleep-time-between-batch"
              ],
              "argument": 0,
              "description": "üí§ Sleep time in seconds between batches\n   default is 0\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--nb-partitions"
              ],
              "argument": 1,
              "description": "üî¢ Number of partitions for the topic. (default is 1)\n\n‚ùå Important: If topic is existing, it will be re-created before producing to topic.\n\nDefault value: 1\n"
            },
            {
              "names": [
                "--compression-codec"
              ],
              "argument": [
                "gzip",
                "snappy",
                "lz4",
                "zstd"
              ],
              "description": "ü§ê The compression codec: either 'gzip', 'snappy', 'lz4', or 'zstd'\nIf not set, there is no compression\n\nAllowed values: gzip, snappy, lz4, zstd\n"
            },
            {
              "names": [
                "--compatibility"
              ],
              "argument": [
                "BACKWARD",
                "BACKWARD_TRANSITIVE",
                "FORWARD",
                "FORWARD_TRANSITIVE",
                "FULL",
                "FULL_TRANSITIVE",
                "NONE"
              ],
              "description": "Schema Registry compatibility rule\n\nAllowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE\n"
            },
            {
              "names": [
                "--key-subject-name-strategy"
              ],
              "argument": [
                "TopicNameStrategy",
                "RecordNameStrategy",
                "TopicRecordNameStrategy"
              ],
              "description": "Key Subject Name Strategy\n\nAllowed values: TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy\n"
            },
            {
              "names": [
                "--value-subject-name-strategy"
              ],
              "argument": [
                "TopicNameStrategy",
                "RecordNameStrategy",
                "TopicRecordNameStrategy"
              ],
              "description": "Value Subject Name Strategy\n\nAllowed values: TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy\n"
            },
            {
              "names": [
                "--headers"
              ],
              "argument": "HEADERS",
              "description": "üöè Headers to use for all records. If not set, no header is used.\n\nExample: --headers \"header1:value1,header2:value2\"\n\nNote: CP 7.2+ is required.\n"
            },
            {
              "names": [
                "--forced-key"
              ],
              "argument": "FORCED-KEY",
              "description": "‚ò¢Ô∏è Key to use for all records. \n\nüéì Tip: use --generate-only first with avro, json-schema or protobuf to get skeleton of messages and then use --forced-key to send the message you need. \n"
            },
            {
              "names": [
                "--forced-value"
              ],
              "argument": "FORCED-VALUE",
              "description": "‚ò¢Ô∏è Value to use for all records. \n\nüéì Tip: use --generate-only first with avro, json-schema or protobuf to get skeleton of messages and then use --forced-value to send the message you need. \n"
            },
            {
              "names": [
                "--generate-only"
              ],
              "argument": "",
              "description": "üö™ Only generate messages without sending to kafka topic.\n\nUsed with --forced-value, this is a powerful way to send specific messages.\n"
            },
            {
              "names": [
                "--tombstone"
              ],
              "argument": "",
              "description": "‚ö∞Ô∏è Generate tombstone (record with null value). \n\nSetting --key is recommended when this flag is used. \nIf not set, the key will also be null, hence generating a null record (both key and value being null)\n\nNote: CP 7.2+ is required.\n"
            },
            {
              "names": [
                "--validate"
              ],
              "argument": "",
              "description": "‚òëÔ∏è Validate schema according to connect sink converter used\n"
            },
            {
              "names": [
                "--derive-key-schema-as"
              ],
              "argument": [
                "AVRO",
                "JSON",
                "PROTOBUF"
              ],
              "description": "ü™Ñ Use playground schema derive-schema command to deduce schema from key payload\n\nPossible values:\n\n- AVRO\n- JSON (json schema)\n- PROTOBUF\n\nAllowed values: AVRO, JSON, PROTOBUF\n"
            },
            {
              "names": [
                "--derive-value-schema-as"
              ],
              "argument": [
                "AVRO",
                "JSON",
                "PROTOBUF"
              ],
              "description": "ü™Ñ Use playground schema derive-schema command to deduce schema from value payload\n\nPossible values:\n\n- AVRO\n- JSON (json schema)\n- PROTOBUF\n\nAllowed values: AVRO, JSON, PROTOBUF\n"
            },
            {
              "names": [
                "--no-null"
              ],
              "argument": "",
              "description": "ü™π Never generate null fields even for optional fields\n\nN.B: only work with avro and json-schema\n"
            },
            {
              "names": [
                "--consume"
              ],
              "argument": "",
              "description": "üì• After producing, directly consume topic.\n"
            },
            {
              "names": [
                "--delete-topic"
              ],
              "argument": "",
              "description": "‚ùå Delete topic and associated schema/subject if applicable before producing data.\n"
            },
            {
              "names": [
                "--reference"
              ],
              "argument": "REFERENCE",
              "description": "üñáÔ∏è Schema reference\n\nSee docs: https://docs.confluent.io/platform/7.6/schema-registry/fundamentals/serdes-develop/index.html#schema-references\n\nüéì Tip: you can pass multiple references by specifying --reference multiple times\n\nüî• You can either:\n\n* Set your own schema (avro, json-schema, protobuf) within single quotes (see examples) \n\n* Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion\n\nRepeatable: ‚úì Yes\n"
            },
            {
              "names": [
                "--validate-config"
              ],
              "argument": [
                "scrub.invalid.names=true",
                "enhanced.avro.schema.support=true",
                "connect.meta.data=false",
                "object.additional.properties=false",
                "use.optional.for.nonrequired=true",
                "ignore.default.for.nullables=true",
                "generalized.sum.type.support=true",
                "enhanced.protobuf.schema.support=true",
                "generate.index.for.unions=false",
                "int.for.enums=true",
                "optional.for.nullables=true",
                "generate.struct.for.nulls=true",
                "wrapper.for.nullables=true",
                "wrapper.for.raw.primitives=false"
              ],
              "description": "üî© Converter configuration parameters to use \n\nSee docs: https://docs.confluent.io/platform/current/schema-registry/connect.html#using-kconnect-long-with-sr\n\nüéì Tip: you can pass multiple parameters by specifying --validate-config multiple times\n\nRepeatable: ‚úì Yes\n\nAllowed values: scrub.invalid.names=true, enhanced.avro.schema.support=true, connect.meta.data=false, object.additional.properties=false, use.optional.for.nonrequired=true, ignore.default.for.nullables=true, generalized.sum.type.support=true, enhanced.protobuf.schema.support=true, generate.index.for.unions=false, int.for.enums=true, optional.for.nullables=true, generate.struct.for.nulls=true, wrapper.for.nullables=true, wrapper.for.raw.primitives=false\n"
            },
            {
              "names": [
                "--producer-property"
              ],
              "argument": "PRODUCER-PROPERTY",
              "description": "üî© Producer configuration parameters to use \n\nSee docs: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#cp-config-producer\n\nüéì Tip: you can pass multiple parameters by specifying --producer-property multiple times\n\nExample: --producer-property \"max.request.size=990485760\" --producer-property \"client.id=myid\"\n\nRepeatable: ‚úì Yes\n"
            },
            {
              "names": [
                "--record-size"
              ],
              "argument": 0,
              "description": "üèãÔ∏è Record size in bytes, eg. 1048576 for 1MB\n\nüì¢ If size is > 1Mb, --producer-property max.request.size and topic max.message.bytes will be automatically set to support the record size.\n\nDefault value: 0\n"
            },
            {
              "names": [
                "--value-schema-id"
              ],
              "argument": "VALUE-SCHEMA-ID",
              "description": "üî∞ Do not auto register schema and specify schema id to use. \n\nIt sets --property value.schema.id=x --property auto.register=false --property use.latest.version=true\n"
            }
          ]
        },
        {
          "name": "create",
          "description": "üÜï Create topic\n",
          "usage": "playground topic create [OPTIONS] [--] [ARGUMENTS...]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--nb-partitions"
              ],
              "argument": 1,
              "description": "Number of partitions for the topic. (default is 1)\n\nDefault value: 1\n"
            }
          ]
        },
        {
          "name": "delete",
          "description": "‚ùå Delete topic and associated schema/subject if applicable\n",
          "usage": "playground topic delete [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--skip-delete-schema"
              ],
              "argument": "",
              "description": "üî∞ Do not delete subject/schema\n"
            }
          ]
        },
        {
          "name": "alter",
          "description": "ü™õ Alter topic config\n",
          "usage": "playground topic alter [OPTIONS] [--] [ARGUMENTS...]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--topic",
                "-t"
              ],
              "argument": "TOPIC",
              "description": "üó≥ Topic name\n\nRequired: ‚úì Yes\n"
            }
          ]
        }
      ]
    },
    {
      "name": "connector-plugin",
      "description": "üîå Connector-plugin commands\n",
      "usage": "playground connector-plugin COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "search-jar",
          "description": "‚òï List jars for a connector plugin from confluent hub https://www.confluent.io/hub/ Search for specific class and display method signatures\n",
          "usage": "playground connector-plugin search-jar [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector-plugin",
                "-c"
              ],
              "argument": "CONNECTOR-PLUGIN",
              "description": "üîå Connector plugin name\n\nüéì Tip: use <tab> completion to trigger fzf completion\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--connector-tag"
              ],
              "argument": "CONNECTOR_TAG",
              "description": "üîó Connector version to use\n\nBy default, for each connector, the latest available version on Confluent Hub is used\n\nüéì Tip: set to \" \" in order to select the version dynamically\n\nConflicts with: --connector-zip\n"
            },
            {
              "names": [
                "--class"
              ],
              "argument": "CLASS",
              "description": "‚òï Java class name to search for in all jars\n"
            }
          ]
        },
        {
          "name": "versions",
          "description": "üíØ List versions for a connector plugin from confluent hub https://www.confluent.io/hub/\n",
          "usage": "playground connector-plugin versions [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector-plugin",
                "-c"
              ],
              "argument": "CONNECTOR-PLUGIN",
              "description": "üîå Connector plugin name\n\nüéì Tip: use <tab> completion to trigger fzf completion\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--force-refresh"
              ],
              "argument": "",
              "description": "‚ò¢Ô∏è Force refresh.\n"
            },
            {
              "names": [
                "--last"
              ],
              "argument": "LAST",
              "description": "üÜï Number of last versions to show\n\nConflicts with: --all\n"
            }
          ]
        },
        {
          "name": "display-last-updated",
          "description": "üÜï List last updated connector plugins from confluent hub https://www.confluent.io/hub/\n",
          "usage": "playground connector-plugin display-last-updated [OPTIONS]",
          "options": [
            {
              "names": [
                "--days"
              ],
              "argument": 3,
              "description": "üìÖ Number of days to look back\n\nDefault is 3 days\n\nDefault value: 3\n"
            },
            {
              "names": [
                "--vendor"
              ],
              "argument": "VENDOR",
              "description": "üè¢ Only display results for this vendor\n"
            }
          ]
        },
        {
          "name": "sourcecode",
          "description": "üßë‚Äçüíª Open source code url in your browser\n  \n  You can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode\n  \n",
          "usage": "playground connector-plugin sourcecode [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector-plugin",
                "-c"
              ],
              "argument": "CONNECTOR-PLUGIN",
              "description": "üîå Connector plugin name\n\nüéì Tip: use <tab> completion to trigger fzf completion\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--only-show-url"
              ],
              "argument": "",
              "description": "üåê Only show url\n"
            },
            {
              "names": [
                "--connector-tag"
              ],
              "argument": "CONNECTOR_TAG",
              "description": "üîó Connector version to use\n\nBy default, for each connector, the latest available version on Confluent Hub is used (for Confluent employees, it will also get latest versions for fully managed connectors)\n\nüî¢ Confluent employees only: for fully managed connectors, use the cc-connect image version for the pcc. You must have a Confluent Github token set with GITHUB_TOKEN or GH_TOKEN environment variable and also be using Confluent VPN.\n\nüéì Tip: set to \" \" in order to select the version dynamically\n\nüéì Tip: you can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode\n\nRepeatable: ‚úì Yes\n"
            },
            {
              "names": [
                "--compile"
              ],
              "argument": "",
              "description": "üèóÔ∏è Checkout and compile code\n\nYou must have git installed.\n\nConfluent employees only: make sure to follow \"Maven FAQ\"\n"
            },
            {
              "names": [
                "--compile-jdk-version"
              ],
              "argument": [
                8,
                11,
                17,
                20
              ],
              "description": "ü§é JDK version to use when compiling\nIt will check in pom.xml for maven-compiler-plugin source/target version or release version and set jdk accordingly\nDefault is 11\n\nAllowed values: 8, 11, 17, 20\n"
            }
          ]
        }
      ]
    },
    {
      "name": "connector",
      "description": "üîó Connector commands\n",
      "usage": "playground connector COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "status",
          "description": "üß© Show status of all connectors\n",
          "usage": "playground connector status [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "oracle-cdc-xstream",
          "description": "üÖæÔ∏è Specific Oracle CDC Xstream commands\n  \n",
          "usage": "playground connector oracle-cdc-xstream COMMAND",
          "options": []
        },
        {
          "name": "offsets",
          "description": "üíà Handle source and sink connectors offsets\n  \n    Note: First-class offsets (KIP-875) is only available if CP > 7.6\n  \n",
          "usage": "playground connector offsets COMMAND",
          "options": []
        },
        {
          "name": "plugins",
          "description": "üé® Show all connector plugins installed. You can also display transforms, converters and predicates using --all flag\n",
          "usage": "playground connector plugins [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--all"
              ],
              "argument": "",
              "description": "üåï Show also transforms, converters, predicates available\n"
            }
          ]
        },
        {
          "name": "pause",
          "description": "‚è∏Ô∏è  Pause connector\n",
          "usage": "playground connector pause [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "versions",
          "description": "üßû Get current and latest versions available on Confluent Hub for connector(s) used in example\n  \n",
          "usage": "playground connector versions",
          "options": []
        },
        {
          "name": "sourcecode",
          "description": "üßë‚Äçüíª open source code url for connector(s) used in example\n  \n  You can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode\n  \n",
          "usage": "playground connector sourcecode [OPTIONS]",
          "options": [
            {
              "names": [
                "--only-show-url"
              ],
              "argument": "",
              "description": "üåê Only show url\n"
            },
            {
              "names": [
                "--connector-tag"
              ],
              "argument": "CONNECTOR_TAG",
              "description": "üîó Connector version to use\n\nBy default, for each connector, the current version is used (for Confluent employees, it will also get latest versions for fully managed connectors)\n\nüéì Tip: set to \" \" in order to select the version dynamically\n\nüéì Tip: you can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode\n\nRepeatable: ‚úì Yes\n"
            }
          ]
        },
        {
          "name": "restart",
          "description": "‚ôªÔ∏è  Restart connector\n",
          "usage": "playground connector restart [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--task-id",
                "-t"
              ],
              "argument": "TASK_ID",
              "description": "üîß Restart specific task ID only (instead of restarting entire connector)\n"
            }
          ]
        },
        {
          "name": "stop",
          "description": "üõë Stop connector (only available if CP > 7.5)\n",
          "usage": "playground connector stop [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "resume",
          "description": "‚èØÔ∏è  Resume connector\n",
          "usage": "playground connector resume [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "delete",
          "description": "üóëÔ∏è  Delete connector\n",
          "usage": "playground connector delete [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "show-lag",
          "description": "üê¢ Show lag of sink connector\n  \n  It will run until all lag becomes 0 (press ctrl-c to exit)\n  \n",
          "usage": "playground connector show-lag [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--interval"
              ],
              "argument": 20,
              "description": "Interval between lag checks (default is 20 seconds).\n\nDefault value: 20\n"
            },
            {
              "names": [
                "--max-wait"
              ],
              "argument": 0,
              "description": "‚è≥ Max time in seconds to wait for lag to become 0. If set to 0 (default), it will run until all lag becomes 0.\n\nDefault value: 0\n"
            }
          ]
        },
        {
          "name": "show-config",
          "description": "üß∞ Show current connector config that was applied\n  \n  use --force-rest-endpoint to get results with REST API /config endpoint (https://docs.confluent.io/platform/current/connect/references/restapi.html#get--connectors-(string-name)-config)\n  \n",
          "usage": "playground connector show-config [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--no-clipboard"
              ],
              "argument": "",
              "description": "do not copy to clipboard (internal)\n"
            },
            {
              "names": [
                "--force-rest-endpoint"
              ],
              "argument": "",
              "description": "‚ò¢Ô∏è Force using REST API /config endpoint (https://docs.confluent.io/platform/current/connect/references/restapi.html#get--connectors-(string-name)-config)\n"
            }
          ]
        },
        {
          "name": "show-config-parameters",
          "description": "üî© Show all possible configuration parameters of connector\n",
          "usage": "playground connector show-config-parameters [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--open",
                "-o"
              ],
              "argument": "",
              "description": "üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)\n"
            },
            {
              "names": [
                "--force-refresh"
              ],
              "argument": "",
              "description": "‚ò¢Ô∏è Force refresh.\n"
            },
            {
              "names": [
                "--only-show-file-path"
              ],
              "argument": "",
              "description": "üìÇ Only show the path of the file containing the configuration parameters\n"
            },
            {
              "names": [
                "--only-show-json"
              ],
              "argument": "",
              "description": "üìó Only show list of all available parameters for connector (with default value when applicable)\n"
            },
            {
              "names": [
                "--only-show-json-file-path"
              ],
              "argument": "",
              "description": "üìÇ Only show the path of the json file containing the configuration parameters\n"
            }
          ]
        },
        {
          "name": "select-config",
          "description": "üóúÔ∏è Easily select config from all possible configuration parameters of connector\n  \n  üéì Tip: use <tab> to select multiple config at once !\n",
          "usage": "playground connector select-config [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "snippets",
          "description": "üîå useful snippets\n",
          "usage": "playground connector snippets [OPTIONS]",
          "options": [
            {
              "names": [
                "--converter"
              ],
              "argument": [
                "avro",
                "protobuf",
                "json-schema",
                "json",
                "json-schema-enabled",
                "string",
                "bytearray"
              ],
              "description": "üîå Converter\n\nAllowed values: avro, protobuf, json-schema, json, json-schema-enabled, string, bytearray\n"
            },
            {
              "names": [
                "--dlq"
              ],
              "argument": "",
              "description": "üíÄ dlq\n"
            }
          ]
        },
        {
          "name": "open-docs",
          "description": "üßë‚Äçüéì Open connector documentation of currently running conector(s)\n",
          "usage": "playground connector open-docs [OPTIONS]",
          "options": [
            {
              "names": [
                "--only-show-url"
              ],
              "argument": "",
              "description": "üåê Only show url\n"
            }
          ]
        },
        {
          "name": "log-level",
          "description": "üß¨ Set connect log level\n  \n  üéì Tip: it will also set io.confluent.kafka.schemaregistry.client.rest.RestService (to see schema registry rest requests) and org.apache.kafka.connect.runtime.TransformationChain (to see records before and after SMTs)\n          it will also set org.apache.kafka.connect.runtime.WorkerSinkTask for sink and org.apache.kafka.connect.runtime.WorkerSourceTask for source connectors.\n",
          "usage": "playground connector log-level [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--level",
                "-l"
              ],
              "argument": [
                "INFO",
                "WARN",
                "DEBUG",
                "TRACE"
              ],
              "description": "‚ùïLog level\n\nRequired: ‚úì Yes\n\nAllowed values: INFO, WARN, DEBUG, TRACE\n"
            }
          ]
        },
        {
          "name": "logs",
          "description": "üïµÔ∏è  Tail and follow connect logs\n  \n  For onprem connectors, this is basically a shortcut for \"playground container logs --container connect\", --connector flag is not relevant\n  \n  For Fully Managed connectors, limitations apply (see https://docs.confluent.io/cloud/current/connectors/logging-cloud-connectors.html#using-ccloud-cli)\n",
          "usage": "playground connector logs [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--open",
                "-o"
              ],
              "argument": "",
              "description": "üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)\n\nConflicts with: --wait-for-log\n"
            },
            {
              "names": [
                "--wait-for-log",
                "-w"
              ],
              "argument": "LOG",
              "description": "üò¥ Wait until log appears\n\nConflicts with: --open\n"
            },
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "open-ccloud-connector-in-browser",
          "description": "ü§ñ Open Fully Managed connector in browser (Confluent Cloud dashboard)\n",
          "usage": "playground connector open-ccloud-connector-in-browser [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            },
            {
              "names": [
                "--browser"
              ],
              "argument": "BROWSER",
              "description": "üåé browser name\n\nDefault browser from your system if not set\n"
            }
          ]
        },
        {
          "name": "connect-migration-utility",
          "description": "üß© Run Kafka Connector Migration Utility (see https://github.com/confluentinc/connect-migration-utility/) on running connect cluster\n  \n  The connector example should be ran with --environment flag set to <ccloud>\n  \n  See a full example at https://github.com/vdesabou/kafka-docker-playground/blob/master/ccloud/connect-migration-utility/README.md\n  \n",
          "usage": "playground connector connect-migration-utility COMMAND",
          "options": []
        },
        {
          "name": "create-or-update",
          "description": "üßë‚Äçüé®  Create or update connector\n",
          "usage": "playground connector create-or-update [JSON] [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--no-clipboard"
              ],
              "argument": "",
              "description": "do not copy to clipboard (internal)\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nRequired: ‚úì Yes\n"
            },
            {
              "names": [
                "--level",
                "-l"
              ],
              "argument": [
                "INFO",
                "WARN",
                "DEBUG",
                "TRACE"
              ],
              "description": "‚ùïLog level\n\n‚ö†Ô∏è Not available for ccloud connectors\n\nAllowed values: INFO, WARN, DEBUG, TRACE\n"
            },
            {
              "names": [
                "--package",
                "-p"
              ],
              "argument": "PACKAGE",
              "description": "Package name\n"
            },
            {
              "names": [
                "--wait-for-zero-lag"
              ],
              "argument": "",
              "description": "üò¥ Wait until lag becomes 0\n"
            },
            {
              "names": [
                "--validate"
              ],
              "argument": "",
              "description": "‚úÖ Validate config using PUT /connector-plugins/(string:name)/config/validate (https://docs.confluent.io/platform/current/connect/references/restapi.html#put--connector-plugins-(string-name)-config-validate)\n"
            },
            {
              "names": [
                "--skip-automatic-connector-config"
              ],
              "argument": "",
              "description": "ü§ñ If example is run (playground run) with --environment flag, automatic configuration to adapt to the environment is added. \n\nThis flag allows to skip this automatic configuration (only useful to reproduce issues)\n"
            },
            {
              "names": [
                "--offsets"
              ],
              "argument": "OFFSETS",
              "description": "üìç Create connector with offsets (https://docs.confluent.io/cloud/current/connectors/offsets.html#create-connectors-with-offsets)\n\n‚ö†Ô∏è Only available for ccloud connectors, the connector should not really exists\n"
            },
            {
              "names": [
                "--initial-state"
              ],
              "argument": [
                "RUNNING",
                "PAUSED",
                "STOPPED"
              ],
              "description": "ü™µ Create connector with specific status (https://cwiki.apache.org/confluence/display/KAFKA/KIP-980%3A+Allow+creating+connectors+in+a+stopped+state)\n\nOnly available if CP > 7.7\n\n‚ö†Ô∏è not available for ccloud connectors\n\nAllowed values: RUNNING, PAUSED, STOPPED\n"
            }
          ]
        },
        {
          "name": "update",
          "description": "üõ†Ô∏è Update connector configuration by opening current connector config in text editor set with playground config editor <editor> (default is code). Once file is saved, the new configuration is updated.\n",
          "usage": "playground connector update [OPTIONS]",
          "options": [
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        }
      ]
    },
    {
      "name": "oracle-cdc-xstream",
      "description": "üÖæÔ∏è Specific Oracle CDC Xstream commands\n",
      "usage": "playground connector oracle-cdc-xstream COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "generate-report",
          "description": "‚öôÔ∏è Generate and open oracle cdc xstream connector diagnostics, see https://docs.confluent.io/kafka-connectors/oracle-xstream-cdc-source/current/troubleshooting.html#connector-diagnostics-script\n  \n",
          "usage": "playground connector oracle-cdc-xstream generate-report",
          "options": []
        },
        {
          "name": "debug",
          "description": "üêû Execute various SQL commands to debug xstream components\n  \n",
          "usage": "playground connector oracle-cdc-xstream debug",
          "options": []
        }
      ]
    },
    {
      "name": "offsets",
      "description": "üíà Handle source and sink connectors offsets\n\n  Note: First-class offsets (KIP-875) is only available if CP > 7.6\n",
      "usage": "playground connector offsets COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "get",
          "description": "üèπ Get current offsets for source and sink connectors\n  \n  ‚ö†Ô∏è Available for ccloud source connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)\n  \n",
          "usage": "playground connector offsets get [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "reset",
          "description": "üÜï Reset offsets for source and sink connectors\n  \n  ‚ö†Ô∏è Available for ccloud connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)\n  \n",
          "usage": "playground connector offsets reset [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "alter",
          "description": "‚õèÔ∏è Alter offsets for source and sink connectors\n  \n  ‚ö†Ô∏è Available for ccloud connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)\n  \n",
          "usage": "playground connector offsets alter [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        },
        {
          "name": "get-offsets-request-status",
          "description": "üëÅÔ∏è‚Äçüó®Ô∏è Get the status of the previous offset request\n  \n  ‚ö†Ô∏è Available for ccloud source connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)\n  \n",
          "usage": "playground connector offsets get-offsets-request-status [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            },
            {
              "names": [
                "--connector",
                "-c"
              ],
              "argument": "CONNECTOR",
              "description": "üîó Connector name\n\nüéì Tip: If not specified, the command will apply to all connectors\n"
            }
          ]
        }
      ]
    },
    {
      "name": "connect-migration-utility",
      "description": "üß© Run Kafka Connector Migration Utility (see https://github.com/confluentinc/connect-migration-utility/) on running connect cluster\n\nThe connector example should be ran with --environment flag set to <ccloud>\n\nSee a full example at https://github.com/vdesabou/kafka-docker-playground/blob/master/ccloud/connect-migration-utility/README.md\n",
      "usage": "playground connector connect-migration-utility COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "discovery",
          "description": "üë®‚Äçüî¨ Discover connectors in the local connect cluster and export their configurations to files\n    \n    see https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#step-1-specify-the-connector-configuration\n  \n",
          "usage": "playground connector connect-migration-utility discovery [OPTIONS]",
          "options": [
            {
              "names": [
                "--verbose",
                "-v"
              ],
              "argument": "",
              "description": "üêû Show command being ran.\n"
            }
          ]
        },
        {
          "name": "migrate",
          "description": "ü™Ñ Migrate discovered connectors to fully managed connectors\n  \n    see https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#step-2-migrate-the-connector\n    ‚ö†Ô∏è <discovery> command should be run first\n  \n",
          "usage": "playground connector connect-migration-utility migrate [OPTIONS]",
          "options": [
            {
              "names": [
                "--migration-mode"
              ],
              "argument": "create",
              "description": "- create: Create connector without any offset consideration\n- stop_create_latest_offset: Create a connector with no data loss/duplication (the python script stops the self-managed connector and fetches the latest offset and creates a fully-managed connector on Confluent Cloud using the fetched offset). See https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#create-a-connector-with-no-data-lossduplication.\n- create_latest_offset: Create a connector with no downtime (the python script fetches the latest offset without stopping the connector and creates a fully-managed connector on Confluent Cloud using the fetched offset. This option may cause data duplication as the self-managed connector is still running). See https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#create-a-connector-with-no-downtime.\n\nDefault value: create\n\nAllowed values: stop_create_latest_offset, create, create_latest_offset\n"
            },
            {
              "names": [
                "--sensitive-property"
              ],
              "argument": "SENSITIVE-PROPERTY",
              "description": "üîê Pass sensitive config properties when migrating connector\n\nüéì Tip: you can pass multiple properties by specifying --sensitive-property multiple times\n\nExample: --sensitive-property \"aws.access.key.id=xxx\" --sensitive-property \"aws.secret.access.key=xxx\"\n\nRepeatable: ‚úì Yes\n"
            }
          ]
        }
      ]
    },
    {
      "name": "ec2",
      "description": "‚ú® Create and manage AWS EC2 instances (using Cloud Formation) to run kafka-docker-playground\n\nü™Ñ Open EC2 instances directly in Visual Studio code using Remote Development (over SSH)\n",
      "usage": "playground ec2 COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "create",
          "description": "üë∑ Create kafka-docker-playground EC2 instance using AWS Cloud Formation\n  \n  üîê AWS EC2 pem file for the ec2 instance will be created and stored in root folder (make sure to do backup)\n  \n  üåç Region being used will be the one set in your environment (`aws configure get region`) either by AWS_REGION environment variable or ~/.aws/config\n",
          "usage": "playground ec2 create [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance-type"
              ],
              "argument": "t3.2xlarge",
              "description": "üßë‚Äçüíª instance type. default is t3.2xlarge\n\nDefault value: t3.2xlarge\n\nAllowed values: c1.medium, c1.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, c3.large, c3.xlarge, c4.2xlarge, c4.4xlarge, c4.large, c4.xlarge, m1.large, m1.medium, m1.small, m1.xlarge, m2.2xlarge, m2.4xlarge, m2.xlarge, m3.2xlarge, m3.large, m3.medium, m3.xlarge, m4.10xlarge, m4.2xlarge, m4.4xlarge, m4.large, m4.xlarge, t1.micro, t2.large, t2.medium, t2.micro, t2.nano, t2.small, t3.2xlarge\n"
            },
            {
              "names": [
                "--size"
              ],
              "argument": 1000,
              "description": "üíæ instance size in Gb. default is 1000 Gb\n\nDefault value: 1000\n"
            },
            {
              "names": [
                "--suffix"
              ],
              "argument": "SUFFIX",
              "description": "üìÆ suffix to add to instance name pg-${username}-${suffix} \n\nif not set, default is pg-${username}-${6-chars-random-string}\n"
            }
          ]
        },
        {
          "name": "delete",
          "description": "‚ùå Delete an EC2 instance created with Cloud Formation\n  \n  WARNING:  This will delete your cloud formation and associated EC2 instance\n",
          "usage": "playground ec2 delete [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üåÄ ec2 instance cloudformation (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            }
          ]
        },
        {
          "name": "open",
          "description": "üë®‚Äçüíª Open an EC2 instance using Visual Studio code\n  \n  üîê Only your current ip address will be allowed to connect\n",
          "usage": "playground ec2 open [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üñ•Ô∏è ec2 instance (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            },
            {
              "names": [
                "--enable-sync-repro-folder"
              ],
              "argument": "",
              "description": "üëâ Enable sync reproduction-models folder between local and ec2 instance\n"
            }
          ]
        },
        {
          "name": "list",
          "description": "üîò List all EC2 instance\n",
          "usage": "playground ec2 list",
          "options": []
        },
        {
          "name": "stop",
          "description": "üî¥ Stop an EC2 instance\n",
          "usage": "playground ec2 stop [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üñ•Ô∏è ec2 instance (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            }
          ]
        },
        {
          "name": "start",
          "description": "üü¢ Start an EC2 instance\n",
          "usage": "playground ec2 start [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üñ•Ô∏è ec2 instance (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            }
          ]
        },
        {
          "name": "sync-repro-folder",
          "description": "‚ÜîÔ∏è Synchronize reproduction-models folder bewteen local and ec2 instance\n  \n  Note: rsync needs to be installed\n  \n",
          "usage": "playground ec2 sync-repro-folder COMMAND",
          "options": []
        }
      ]
    },
    {
      "name": "sync-repro-folder",
      "description": "‚ÜîÔ∏è Synchronize reproduction-models folder bewteen local and ec2 instance\n\nNote: rsync needs to be installed\n",
      "usage": "playground ec2 sync-repro-folder COMMAND",
      "options": [],
      "subcommands": [
        {
          "name": "local-to-ec2",
          "description": "üëâ Sync local reproduction-models folder to ec2 instance\n",
          "usage": "playground ec2 sync-repro-folder local-to-ec2 [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üñ•Ô∏è ec2 instance (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            }
          ]
        },
        {
          "name": "ec2-to-local",
          "description": "üëà Sync ec2 instance reproduction-models folder to local\n",
          "usage": "playground ec2 sync-repro-folder ec2-to-local [OPTIONS]",
          "options": [
            {
              "names": [
                "--instance",
                "-i"
              ],
              "argument": "INSTANCE",
              "description": "üñ•Ô∏è ec2 instance (need to use completion to get all required details)\n\nüéì Tip: If not specified, the command will apply to all ec2 instances\n"
            }
          ]
        }
      ]
    }
  ]
}
