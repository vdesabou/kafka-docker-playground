name: playground
description: | 
  üß† CLI for Kafka Docker Playground üê≥
  
  üëâ Check documentation https://kafka-docker-playground.io/#/cli
usage: playground [OPTIONS] COMMAND
options: []
inheritedOptions: []
subcommands:
  - name: help
    description: | 
        Show help about a command
    usage: playground help [COMMAND]
    options: []
    subcommands:

  - name: status
    description: | 
        üó∫Ô∏è Show a status
    usage: playground status
    options: []
    subcommands:
  - name: config
    description: | 
        ‚öôÔ∏è Configure CLI
    usage: playground config COMMAND
    options: []
    subcommands:
      - name: editor
        description: | 
          editor to use to open files
        usage: playground config editor EDITOR
        options: []
      - name: folder_zip_or_jar
        description: | 
          üìÇ list of folders where to search for zip or jar
            current folder is always included
            
            default is ~ (home dir)
        usage: playground config folder_zip_or_jar FOLDER...
        options: []
      - name: clipboard
        description: | 
          copy to clipboard connector config (only working on MacOS)
        usage: playground config clipboard [ENABLED]
        options: []
      - name: open-ccloud-connector-in-browser
        description: | 
          when running a fully managed connector example, it opens the connector in browser
            
        usage: playground config open-ccloud-connector-in-browser COMMAND
        options: []
      - name: open-grafana-in-browser
        description: | 
          when running an example with --enable-jmx-grafana flag, it opens grafana in browser
            
        usage: playground config open-grafana-in-browser COMMAND
        options: []
      - name: container-kill-all-before-run
        description: | 
          when running an example, always call playground container kill-all first. If set to false, it will call playground stop instead.
            
        usage: playground config container-kill-all-before-run [ENABLED]
        options: []
      - name: check-and-update-repo-version
        description: | 
          when running an example, always check if repo version is older than 3 days, if disabled, it will skip this check.
            
        usage: playground config check-and-update-repo-version [ENABLED]
        options: []
  - name: open-ccloud-connector-in-browser
    description: | 
        when running a fully managed connector example, it opens the connector in browser
        
    usage: playground config open-ccloud-connector-in-browser COMMAND
    options: []
    subcommands:
      - name: automatically
        description: | 
          automatically open the connector in browser
        usage: playground config open-ccloud-connector-in-browser automatically [AUTOMATICALLY]
        options: []
      - name: browser
        description: | 
          browser to use
        usage: playground config open-ccloud-connector-in-browser browser [BROWSER]
        options: []
  - name: open-grafana-in-browser
    description: | 
        when running an example with --enable-jmx-grafana flag, it opens grafana in browser
        
    usage: playground config open-grafana-in-browser COMMAND
    options: []
    subcommands:
      - name: automatically
        description: | 
          automatically open grafana in browser
        usage: playground config open-grafana-in-browser automatically [AUTOMATICALLY]
        options: []
      - name: browser
        description: | 
          browser to use
        usage: playground config open-grafana-in-browser browser [BROWSER]
        options: []

  - name: ai
    description: | 
        üßû‚Äç‚ôÇÔ∏è  AI
        
        It is using Gemini CI (https://google-gemini.github.io/gemini-cli/) in interactive mode.
        
        MCP servers are available:
        
        1. mcp-playground-cli - 
        
          Tools:
          - playground_command_help:
              Get detailed help for playground commands
          - playground_command_suggest:
              Get command suggestions and completions for the Kafka Docker Playground CLI
          - playground_command_validate:
              Validate a complete playground command and suggest corrections
        
        2. mcp-kafka - Kafka MCP Server (https://docs.tuannvm.com/kafka-mcp-server)
        
          Tools:
          - cluster_overview:
              Aggregates high-level cluster health data, such as controller, broker/topic/partition counts, and under-replicated/offline partitions.
          - consume_messages:
              Consume a batch of messages from Kafka topics.
          - describe_configs:
              Fetches configuration entries for a specific resource (topic or broker).
          - describe_consumer_group:
              Shows details for a specific consumer group, including state, members, and optionally partition offsets and lag.
          - describe_topic:
              Provides detailed metadata for a specific Kafka topic, including partition leaders, replicas, and ISRs.
          - list_brokers:
              Lists the configured Kafka broker addresses.
          - list_consumer_groups:
              Enumerates active consumer groups known by the Kafka cluster.
          - list_topics:
              Retrieves all topic names along with partition counts and replication factors.
          - produce_message:
              Produce a message to a Kafka topic
        
          Prompts:
          - kafka_cluster_overview:
              Provides a summary of Kafka cluster health and metrics
          - kafka_consumer_lag_report:
              Provide a detailed report on consumer lag across all consumer groups
          - kafka_health_check:
              Run a comprehensive health check on the Kafka cluster
          - kafka_under_replicated_partitions:
              List topics and partitions where ISR count is less than replication factor
        
        3. mcp-ccloud - Confluent Cloud MCP Server (https://github.com/confluentinc/mcp-confluent)
        
          Tools:
          - add-tags-to-topic:
              Assign existing tags to Kafka topics in Confluent Cloud.
          - alter-topic-config:
              Alter topic configuration in Confluent Cloud.
          - create-connector:
              Create a new connector. Returns the new connector information if successful.
          - create-topic-tags:
              Create new tag definitions in Confluent Cloud.
          - create-topics:
              Create one or more Kafka topics.
          - delete-connector:
              Delete an existing connector. Returns success message if deletion was successful.
          - delete-tag:
              Delete a tag definition from Confluent Cloud.
          - delete-topics:
              Delete the topic with the given names.
          - get-topic-config:
              Retrieve configuration details for a specific Kafka topic.
          - list-clusters:
              Get all clusters in the Confluent Cloud environment
          - list-connectors:
              Retrieve a list of "names" of the active connectors. You can then make a read request for a specific connector by name.
          - list-environments:
              Get all environments in Confluent Cloud with pagination support
          - list-schemas:
              List all schemas in the Schema Registry.
          - list-tags:
              Retrieve all tags with definitions from Confluent Cloud Schema Registry.
          - list-topics:
              List all topics in the Kafka cluster.
          - read-connector:
              Get information about the connector.
          - read-environment:
              Get details of a specific environment by ID
          - remove-tag-from-entity:
              Remove tag from an entity in Confluent Cloud.
          - search-topics-by-name:
              List all topics in the Kafka cluster matching the specified name.
          - search-topics-by-tag:
              List all topics in the Kafka cluster with the specified tag.
    usage: playground ai [--] [GEMINI CLI ARGUMENTS...]
    options: []
    subcommands:

  - name: ccloud-costs
    description: | 
        üí∞  Retrieve ccloud costs for a range of dates
        
        All you have to do is to be already logged in with confluent CLI. It is using https://docs.confluent.io/cloud/current/billing/overview.html#retrieve-costs-for-a-range-of-dates
        
        Cost data can take up to 72 hours to become available.
        
        Start date can reach a maximum of one year into the past
        
        One month is the maximum window between start and end dates
        
        For accuracy, Confluent recommends using a start_date that is at least 72 hours prior to the current date and time.
    usage: playground ccloud-costs [OPTIONS]
    options:
    - names:
      - --start-date
      argument: START_DATE
      description: | 
        üóìÔ∏è start date in format yyyy-mm-dd
        
        Default is 30 days ago
        
    - names:
      - --end-date
      argument: END_DATE
      description: | 
        üóìÔ∏è end date in format yyyy-mm-dd
        
          Default is 3 days ago
        
    - names:
      - --display-only-total-cost
      argument: ""
      description: | 
        üí∞ display only total cost
        
    subcommands:

  - name: ccloud-costs-history
    description: | 
        üëõ  Retrieve ccloud costs for each month since last year
        
        All you have to do is to be already logged in with confluent CLI. It is using https://docs.confluent.io/cloud/current/billing/overview.html#retrieve-costs-for-a-range-of-dates
        
        By default it will only display total cost in dollars. Use the --detailed flag to see more information.
    usage: playground ccloud-costs-history [OPTIONS]
    options:
    - names:
      - --detailed
      argument: ""
      description: | 
        üíπ display all details for each month
        
    subcommands:

  - name: run
    description: | 
        üïπÔ∏è Run any example !
        
        üî• It start an interactive mode where you'll be fully guided !
        
        
        ‚õÖ When running Confluent Cloud (ccloud) example:
        
          All you have to do is to be already logged in with confluent CLI.
        
          By default, a new Confluent Cloud environment with a Cluster will be created.
        
          You can configure the new cluster by setting:
        
          --cluster-type (or CLUSTER_TYPE environment variable): The type of cluster (possible values: basic, standard and dedicated, default basic)
          --cluster-cloud (or CLUSTER_CLOUD environment variable): The Cloud provider (possible values: aws, gcp and azure, default aws)
          --cluster-region (or CLUSTER_REGION environment variable): The Cloud region (use confluent kafka region list to get the list, default eu-west-2 for aws, westeurope for azure and europe-west2 for gcp)
          --cluster-environment (or ENVIRONMENT environment variable) (optional): The environment id where want your new cluster (example: txxxxx) 
        
          In case you want to use your own existing cluster, you need to setup, in addition to previous ones:
        
          --cluster-name (or CLUSTER_NAME environment variable): The cluster name
          --cluster-creds (or CLUSTER_CREDS environment variable): The Kafka api key and secret to use, it should be separated with colon (example: <API_KEY>:<API_KEY_SECRET>)
          --cluster-schema-registry-creds (or SCHEMA_REGISTRY_CREDS environment variable) (optional, if not set, new one will be created): The Schema Registry api key and secret to use, it should be separated with colon (example: <SR_API_KEY>:<SR_API_KEY_SECRET>)
        
        ‚ùó this command will kill all containers using "playground container kill-all", you can disable this by running "playground config container-kill-all-before-run false"
    usage: playground run [OPTIONS]
    options:
    - names:
      - --environment
      argument: plaintext
      description: | 
        üîê The environment to start when running a connector example 
        
        - plaintext
        - ccloud
        - 2way-ssl
        - kerberos
        - ldap-authorizer-sasl-plain
        - ldap-sasl-plain
        - rbac-sasl-plain
        - sasl-plain
        - sasl-scram
        - sasl-ssl
        - ssl_kerberos
        
        Default is plaintext.
        This is only supported when example is a connector example
        
        Default value: plaintext
        
        Allowed values: ccloud, plaintext, sasl-ssl, sasl-plain, 2way-ssl, sasl-scram, kerberos, ssl_kerberos, ldap-authorizer-sasl-plain, ldap-sasl-plain, rbac-sasl-plain
        
    - names:
      - --file
      - -f
      argument: FILE
      description: | 
        üîñ Example file to run
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --open
      - -o
      argument: ""
      description: | 
        üìñ Opening example files (including docker-compose file) with text editor set with playground config editor <editor> (default is code)
        
    - names:
      - --tag
      argument: TAG
      description: | 
        üéØ Confluent Platform (CP) version to use. Applies to all components (broker, connect, schema registry, ksqlDB, etc...)
        
        It sets TAG environment variable
        
        Must be greater or equal to 5.3.0
        
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --connect-tag
      argument: CONNECT_TAG
      description: | 
        üîó Confluent Platform (CP) version to use. Applies to connect only.
        
        It sets CP_CONNECT_TAG environment variable
        
        Must be greater or equal to 5.3.0
        
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --connector-tag
      argument: CONNECTOR_TAG
      description: | 
        üîó Connector version to use
        
        By default, for each connector, the latest available version on Confluent Hub is used
        
        üéì Tip: set to " " in order to select the version dynamically
        
        Conflicts with: --connector-zip
        
    - names:
      - --connector-zip
      argument: CONNECTOR_ZIP
      description: | 
        ü§ê Connector zip to use
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion 
                use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files
                use <option+enter> to use the value you typed manually
        
        Conflicts with: --connector-tag
        
    - names:
      - --connector-jar
      argument: CONNECTOR_JAR
      description: | 
        ü§é Connector jar to use
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion 
                use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files
                use <option+enter> to use the value you typed manually
        
    - names:
      - --enable-ksqldb
      argument: ""
      description: | 
        üöÄ Enable ksqlDB 
        
        ‚ùó not supported with ccloud examples
        
        By default, ksqldb-server and ksqldb-cli containers are not started for every test
        
    - names:
      - --enable-rest-proxy
      argument: ""
      description: | 
        üß≤ Enable Rest Proxy
        
        ‚ùó not supported with ccloud examples
        
        By default, rest-proxy container is not started for every test
        
    - names:
      - --enable-control-center
      argument: ""
      description: | 
        üí† Enable Control Center
        
        By default, control-center container is not started for every test
        
        Control Center is reachable at http://127.0.0.1:9021
        
    - names:
      - --enable-flink
      argument: ""
      description: | 
        üêøÔ∏è Enable Flink
        
        By default, flink is not started for every test
        
        Once enabled, the CLI will ask if you need to download any connectors. Based on the response, you can download one or more connectors from Flink maven repository.
        
        Flink UI is reacheable using http://127.0.0.1:8081 within the flink child directory. If you enable Flink by starting connector deployment, http://127.0.0.1:18081 will be used.
        
    - names:
      - --enable-conduktor
      argument: ""
      description: | 
        üê∫ Enable Conduktor Platform
        
        By default, Conduktor Platform container is not started for every test
        
        Conduktor is reachable at http://127.0.0.1:8080/console (admin/admin)
        
    - names:
      - --enable-multiple-brokers
      argument: ""
      description: | 
        3Ô∏è‚É£ Enable multiple brokers
        
        By default, there is only one broker node enabled
        
    - names:
      - --enable-multiple-connect-workers
      argument: ""
      description: | 
        ü•â Enable multiple connect worker node
        
        By default, there is only one connect worker node enabled
        
    - names:
      - --enable-jmx-grafana
      argument: ""
      description: | 
        Enable Grafana, Prometheus and Pyroscope
        
        üìä Grafana is reachable at http://127.0.0.1:3000 (login/password is admin/password)
        
        üõ°Ô∏è Prometheus is reachable at http://127.0.0.1:9090
        
        üìõ Pyroscope is reachable at http://127.0.0.1:4040
        
    - names:
      - --enable-kcat
      argument: ""
      description: | 
        üêà‚Äç‚¨õ Enable kcat
        
        You can use it with:
        
        $ docker exec kcat kcat -b broker:9092 -L
        
    - names:
      - --enable-sql-datagen
      argument: ""
      description: | 
        üå™Ô∏è Enable SQL Datagen injection
        
        This only works for Oracle, MySql, Postgres and Microsoft Sql Server source connector examples with JDBC and Debezium
        
    - names:
      - --cluster-cloud
      argument: [aws, gcp, azure]
      description: | 
        üå§ The cloud provider: aws, gcp or azure. Default is aws
        
        üéì Tip: you can also use CLUSTER_CLOUD environment variable
        
        Allowed values: aws, gcp, azure
        
    - names:
      - --cluster-type
      argument: [basic, standard, dedicated]
      description: | 
        üîã The cluster type: basic, standard or dedicated. Default is basic
        
        üéì Tip: you can also use CLUSTER_TYPE environment variable
        
        Allowed values: basic, standard, dedicated
        
    - names:
      - --cluster-region
      argument: CLUSTER-REGION
      description: | 
        üó∫ The Cloud region. 
        
        üéì Tip: you can also use CLUSTER_REGION environment variable
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --cluster-environment
      argument: CLUSTER-ENVIRONMENT
      description: | 
        üåê The environment id where want your new cluster (example: txxxxx)
        
        ‚ÑπÔ∏è Optional, if not set, new environment will be created
        
        üéì Tip: you can also use ENVIRONMENT environment variable
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --cluster-name
      argument: CLUSTER-NAME
      description: | 
        üé∞ The cluster name. 
        
        ‚ù£Ô∏è Only required if you want to use your own existing cluster
        
        üéì Tip: you can also use CLUSTER_NAME environment variable
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --cluster-creds
      argument: CLUSTER-CREDS
      description: | 
        üîí The Kafka api key and secret to use, it should be separated with colon (example: <API_KEY>:<API_KEY_SECRET>)
        
        ‚ù£Ô∏è Only required if you want to use your own existing cluster
        
        üéì Tip: you can also use CLUSTER_CREDS environment variable
        
    - names:
      - --cluster-schema-registry-creds
      argument: CLUSTER-SCHEMA-REGISTRY-CREDS
      description: | 
        üîí The Schema Registry api key and secret to use, it should be separated with colon (example: <SR_API_KEY>:<SR_API_KEY_SECRET>)
        
        ‚ÑπÔ∏è Optional, if not set, new credentials will be created
        
        ‚ù£Ô∏è Only required if you want to use your own existing cluster
        
        üéì Tip: you can also use SCHEMA_REGISTRY_CREDS environment variable
        
    - names:
      - --force-interactive-re-run
      argument: ""
      description: | 
        Force interactive mode
        
    - names:
      - --force-interactive-repro
      argument: ""
      description: | 
        Force interactive mode
        
    subcommands:

  - name: re-run
    description: | 
        ‚ö° Simply re-run last example you ran with <playground run>
    usage: playground re-run
    options: []
    subcommands:

  - name: get-ci-result
    description: | 
        ü§ñ get CI result for current example
    usage: playground get-ci-result
    options: []
    subcommands:

  - name: history
    description: | 
        üè∞ Get an history of the examples which were run with run command and run it again
    usage: playground history
    options: []
    subcommands:

  - name: switch-ccloud
    description: | 
        üå©Ô∏è  Switch to ccloud environment.
        
        It will bootstrap ccloud environment based on your previously ran ccloud example.
    usage: playground switch-ccloud
    options: []
    subcommands:

  - name: switch-back
    description: | 
        üí∫  Switch back from previous environment before switch-ccloud was called.
    usage: playground switch-back
    options: []
    subcommands:

  - name: update-version
    description: | 
        ‚ú® Update current confluent platform components (all with --tag or only connect with --connect-tag) or connector(s) with new version(s)
    usage: playground update-version [OPTIONS]
    options:
    - names:
      - --tag
      argument: TAG
      description: | 
        üéØ Confluent Platform (CP) version to use. Applies to all components (broker, connect, schema registry, ksqlDB, etc...)
        
        It sets TAG environment variable
        
        Must be greater or equal to 5.3.0
        
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --connect-tag
      argument: CONNECT_TAG
      description: | 
        üîó Confluent Platform (CP) version to use. Applies to connect only.
        
        It sets CP_CONNECT_TAG environment variable
        
        Must be greater or equal to 5.3.0
        
        üéì Tip: use <tab> completion to trigger fzf completion
        
    - names:
      - --connector-tag
      argument: CONNECTOR_TAG
      description: | 
        üîó Connector version to use
        
        By default, for each connector, the latest available version on Confluent Hub is used
        
        üéì Tip: set to " " in order to select the version dynamically
        
        Conflicts with: --connector-zip
        
    - names:
      - --connector-zip
      argument: CONNECTOR_ZIP
      description: | 
        ü§ê Connector zip to use
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion 
                use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files
                use <option+enter> to use the value you typed manually
        
        Conflicts with: --connector-tag
        
    - names:
      - --connector-jar
      argument: CONNECTOR_JAR
      description: | 
        ü§é Connector jar to use
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion 
                use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files
                use <option+enter> to use the value you typed manually
        
    subcommands:

  - name: open
    description: | 
        üëê When --file is not provided, simply open last example you ran with <playground run>
        
        Otherwise, open any file from the playground using --file.
    usage: playground open [OPTIONS]
    options:
    - names:
      - --file
      - -f
      argument: FILE
      description: | 
        üîé Search any file and open it.
        
        ‚ùï It must be absolute full path
        
        üéì Tip: use <tab> completion to trigger fzf completion
                use <option+enter> to use the value you typed manually
        
    - names:
      - --open-docker-compose
      argument: ""
      description: | 
        üê≥ Also open associated docker-compose file for the current example
        
    - names:
      - --wait
      argument: ""
      description: | 
        üò¥ Wait
        
    subcommands:

  - name: stop
    description: | 
        üõë Stop currently running example
    usage: playground stop
    options: []
    subcommands:

  - name: remove-all-docker-images
    description: | 
        üß® Remove all docker images (including docker volumes)
    usage: playground remove-all-docker-images
    options: []
    subcommands:

  - name: remove-cp-docker-images
    description: | 
        üßπ Remove all Confluent Platform docker images related to a version installed locally (a confirmation will be required for every version present)
    usage: playground remove-cp-docker-images [OPTIONS]
    options:
    - names:
      - --version
      argument: VERSION
      description: | 
        üî¢ Specific version to remove
        
    subcommands:

  - name: refresh-cp-docker-images
    description: | 
        üîÑ Refresh (pull from Docker) all Confluent Platform docker images related to a version installed locally
        
            It also refreshes images for aws, gcp and azure cli
    usage: playground refresh-cp-docker-images [OPTIONS]
    options:
    - names:
      - --version
      argument: VERSION
      description: | 
        üî¢ Specific version to pull 
        
        Required: ‚úì Yes
        
    subcommands:

  - name: cleanup-cloud-details
    description: | 
        üßº playground is actively caching ccloud details (https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%8c%a4%ef%b8%8f-confluent-cloud-examples)
           use this command if you notice that the playground is using unexpected ccloud details
    usage: playground cleanup-cloud-details
    options: []
    subcommands:

  - name: open-docs
    description: | 
        üßë‚Äçüéì Open Confluent documentation of currently running example
    usage: playground open-docs [OPTIONS]
    options:
    - names:
      - --only-show-url
      argument: ""
      description: | 
        üåê Only show url
        
    subcommands:

  - name: open-changelog
    description: | 
        üìú Open playground changelog (https://kafka-docker-playground.io/#/changelog)
    usage: playground open-changelog [OPTIONS]
    options:
    - names:
      - --only-show-url
      argument: ""
      description: | 
        üåê Only show url
        
    subcommands:

  - name: cleanup-cloud-resources
    description: | 
        üßπ Cleanup cloud resources that were created by running examples from the playground
        
        ‚ùóit will remove all resources created by the playground, including topics, connectors, clusters, buckets, redshift cluster, etc...
    usage: playground cleanup-cloud-resources [OPTIONS]
    options:
    - names:
      - --force
      argument: ""
      description: | 
        ‚ò¢Ô∏è do not ask for confirmation
        
        ‚ùóuse with caution
        
    - names:
      - --user
      argument: USER
      description: | 
        ‚ò¢Ô∏è force user
        
    - names:
      - --resource
      argument: ["aws", "gcp", "azure", "ccloud", "salesforce"]
      description: | 
        üõÅ resource to cleanup
        
        If not provided, all of them are cleaned up
        
        üéì Tip: you can pass multiple resources by specifying --resource multiple times
        
        Repeatable: ‚úì Yes
        
        Default value: ["aws", "gcp", "azure", "ccloud", "salesforce"]
        
        Allowed values: aws, gcp, azure, ccloud, salesforce
        
    subcommands:
  - name: repro
    description: | 
        üë∑‚Äç‚ôÇÔ∏è Reproduction model commands
    usage: playground repro COMMAND
    options: []
    subcommands:
      - name: export
        description: | 
          üì§ Export as tgz file uncommitted reproduction models from the folder of current reproduction model
        usage: playground repro export [OPTIONS]
        options:
        - names:
          - --all
          argument: ""
          description: | 
            Export all uncommitted reproduction models
            
      - name: import
        description: | 
          üì• Import tgz file which was created with export command
        usage: playground repro import [OPTIONS]
        options:
        - names:
          - --file
          - -f
          argument: FILE
          description: | 
            ü§ê playground_repro_export.tgz file
            
            ‚ùï It must be absolute full path
            
            üéì Tip: use <tab> completion to trigger fzf completion 
                    use playground config folder_zip_or_jar <folder1> <folder2>... (default is home folder and current folder is always included) to configure where to search the files
            
      - name: bootstrap
        description: | 
          üõ†  Bootstrap reproduction model, just run <playground repro bootstrap> !
            
            üî• HIGHLY RECOMMENDED: start in interactive mode by simple running <playground repro bootstrap> !
            
            üëâ Check documentation https://kafka-docker-playground.io/#/reusables?id=%f0%9f%9b%a0-bootstrap-reproduction-model
        usage: playground repro bootstrap [OPTIONS]
        options:
        - names:
          - --file
          - -f
          argument: FILE
          description: | 
            üîñ Example file to use as basis, if not set, currently running example is used
            
            ‚ùï It must be absolute full path
            
            üéì Tip: use <tab> completion to trigger fzf completion
            
        - names:
          - --description
          - -d
          argument: DESCRIPTION
          description: | 
            üí≠ Description for the reproduction model
            
        - names:
          - --producer
          - -p
          argument: none
          description: | 
            ü§é Java producer type to use
            
            One of avro, avro-with-key, protobuf, protobuf-with-key, json-schema, json-schema-with-key
            
            üéì Tip: Most of times, it's much simpler to use 'playground topic produce'. Use java producer only if you have very specific requirements such as specifying record timestamp or to do perf testing (even though CLI is also good for that)
            
            üéì Tip: 'with-key' will also produce key with selected converter, otherwise LongConverter is used
            
            Default value: none
            
            Allowed values: none, avro, avro-with-key, protobuf, protobuf-with-key, json-schema, json-schema-with-key
            
            Conflicts with: --pipeline
            
        - names:
          - --nb-producers
          - -n
          argument: NB-PRODUCERS
          description: | 
            2Ô∏è‚É£ Number of java producers to generate
            
        - names:
          - --producer-schema-key
          argument: ""
          description: | 
            üî∞ Schema to use for the key
            
            ‚ú® Copy and paste the schema you want to use for the key, save and close the file to continue
            
        - names:
          - --producer-schema-value
          argument: ""
          description: | 
            üî∞ Schema to use for the value
            
            ‚ú® Copy and paste the schema you want to use for the key, save and close the file to continue
            
        - names:
          - --custom-smt
          argument: ""
          description: | 
            üîß Add a custom SMT (which is a no-op)
            
        - names:
          - --pipeline
          argument: SINK_FILE
          description: | 
            üîñ Sink example file to use for creating a pipeline. multiple --pipeline flags can be used to create a pipeline with multiple sinks.
            
            ‚ùï It must be absolute full path. 
            
            üéì Tip: use <tab> completion to trigger fzf completion
            
            Repeatable: ‚úì Yes
            
            Conflicts with: --producer
            

  - name: get-docker-compose
    description: | 
        üêã Get docker-compose
    usage: playground get-docker-compose
    options: []
    subcommands:
  - name: schema
    description: | 
        üî∞ Schema commands
    usage: playground schema COMMAND
    options: []
    subcommands:
      - name: get
        description: | 
          üî∞ Get all schemas versions for specified subject (if --subject is not specified, all subjects will be used)
        usage: playground schema get [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Conflicts with: id
            
        - names:
          - --id
          argument: ID
          description: | 
            üíØ Schema id
            
            Conflicts with: subject, deleted
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --deleted
          argument: ""
          description: | 
            üßü Include soft deleted subjects
            
            Conflicts with: id
            
        - names:
          - --store-in-tmp
          argument: FOLDER
          description: | 
            store in /tmp folder
            
      - name: register
        description: | 
          ‚è∫Ô∏è Register a schema in specified subject
        usage: playground schema register [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Required: ‚úì Yes
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --schema
          argument: SCHEMA
          description: | 
            üî• You can either:
            
            * Set your own schema (avro, json-schema, protobuf) with stdin (see example section). 
            
            * Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion
            
            Default value: -
            
        - names:
          - --id
          argument: ID
          description: | 
            ‚ò¢Ô∏è Force schema id
            
            ‚ùóit will replace any schema which already exists at given id
            
        - names:
          - --metadata-property
          argument: METADATA-PROPERTY
          description: | 
            üü° Add metadata properties to schema contract
            
            See docs: https://docs.confluent.io/platform/current/schema-registry/fundamentals/data-contracts.html#metadata-properties
            
            üéì Tip: you can pass multiple properties by specifying --metadata-property multiple times
            
            Example: --metadata-property "metadata1=value" --metadata-property "metadata2=value"
            
            Repeatable: ‚úì Yes
            
      - name: get-compatibility
        description: | 
          üõ°Ô∏è Get subject-level compatibility
        usage: playground schema get-compatibility [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Required: ‚úì Yes
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: set-compatibility
        description: | 
          üõ°Ô∏è Set subject-level compatibility
        usage: playground schema set-compatibility [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Required: ‚úì Yes
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --compatibility
          argument: [BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE]
          description: | 
            Schema Registry compatibility rule
            
            Required: ‚úì Yes
            
            Allowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE
            
      - name: get-mode
        description: | 
          üîè Get subject-level mode
        usage: playground schema get-mode [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Required: ‚úì Yes
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: set-mode
        description: | 
          üîè Set subject-level mode
            
            To enable mode changes on a Schema Registry cluster, you must also set mode.mutability=true in the Schema Registry properties file before starting Schema Registry
        usage: playground schema set-mode [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name
            
            Required: ‚úì Yes
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --mode
          argument: [IMPORT, READONLY, READWRITE]
          description: | 
            Schema Registry mode
            
            Required: ‚úì Yes
            
            Allowed values: IMPORT, READONLY, READWRITE
            
      - name: set-normalize
        description: | 
          üßΩ Set normalize at schema registry level
            
            See https://docs.confluent.io/platform/current/schema-registry/fundamentals/serdes-develop/index.html#schema-normalization
        usage: playground schema set-normalize [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --value
          argument: [true, false]
          description: | 
            true or false
            
            Required: ‚úì Yes
            
            Allowed values: true, false
            
      - name: delete
        description: | 
          üßü Delete schema
        usage: playground schema delete [OPTIONS]
        options:
        - names:
          - --subject
          argument: SUBJECT
          description: | 
            üìõ Subject name to delete:
              
              if --version is provided, only that version will be deleted. Otherwise the complete subject will be deleted
            
        - names:
          - --version
          argument: VERSION
          description: | 
            üî¢ Schema version of the provided subject to delete
            
            Can only be used when --subject is provided
            
        - names:
          - --permanent
          argument: ""
          description: | 
            üíÄ Hard delete (default is soft delete)
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: derive-schema
        description: | 
          ü™Ñ Derive a schema based on payload
        usage: playground schema derive-schema [OPTIONS]
        options:
        - names:
          - --payload
          argument: PAYLOAD
          description: | 
            üì¶ Payload to derive schema from
            
            Default value: -
            
        - names:
          - --schema-type
          argument: AVRO
          description: | 
            üß© Schema Registry schema "type":
            
            - AVRO
            - JSON (json schema)
            - PROTOBUF
            
            Default is AVRO
            
            Default value: AVRO
            
            Allowed values: AVRO, JSON, PROTOBUF
            
  - name: tcp-proxy
    description: | 
        üèö Zazkia TCP Proxy commands
        
        Simulate TCP connection issues (reset,delay,throttle,corrupt) using emicklei/zazkia (https://github.com/emicklei/zazkia) TCP proxy
    usage: playground tcp-proxy COMMAND
    options: []
    subcommands:
      - name: start
        description: | 
          üíó Start the TCP proxy and automatically replace connector config with zazkia hostname and port 49998
        usage: playground tcp-proxy start [OPTIONS]
        options:
        - names:
          - --hostname
          argument: HOSTNAME
          description: | 
            Hostname used by the tcp proxy to forward request
            
            Required: ‚úì Yes
            
        - names:
          - --port
          argument: PORT
          description: | 
            Port used by the tcp proxy to forward request
            
            Required: ‚úì Yes
            
        - names:
          - --throttle-service-response
          argument: 0
          description: | 
            üêå Throttle service response. This is bytes per second.
            
            Default value: 0
            
        - names:
          - --delay-service-response
          argument: 0
          description: | 
            ‚è≤Ô∏è Add milliseconds delay to service response. Default is 0 ms.
            
            Default value: 0
            
        - names:
          - --break-service-response
          argument: 0
          description: | 
            üíî Percentage of broken connections. Default is 0%.
            
            Default value: 0
            
        - names:
          - --service-response-corrupt
          argument: ""
          description: | 
            ü¶π‚Äç‚ôÇÔ∏è Corrupt service response with random mangled bytes. By default, there is no corruption.
            
        - names:
          - --skip-automatic-connector-config
          argument: ""
          description: | 
            ü§ñ By default, script will attempt to modify automatically the running connector config to use Zazkia proxy.
            
            This flag allows to skip this automatic configuration (only useful if you want to manually update connector config with zazkia tcp proxy details)
            
      - name: get-connections
        description: | 
          üß≤ Get Zazkia active TCP connections config and stats
        usage: playground tcp-proxy get-connections [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: delay
        description: | 
          ‚è≤Ô∏è Add milliseconds delay to service response.
            Set it to 0 to remove the delay.
        usage: playground tcp-proxy delay [OPTIONS]
        options:
        - names:
          - --delay-service-response
          argument: DELAY-SERVICE-RESPONSE
          description: | 
            ‚è≤Ô∏è Add milliseconds delay to service response.
            
            Required: ‚úì Yes
            
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: break
        description: | 
          üíî Break sending the response to the client.
            Set it to 0% to remove the delay.
        usage: playground tcp-proxy break [OPTIONS]
        options:
        - names:
          - --break-service-response
          argument: BREAK-SERVICE-RESPONSE
          description: | 
            üíî Percentage of broken connections.
            
            Required: ‚úì Yes
            
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: close-connection
        description: | 
          ‚ùå Close the Zazkia active TCP connections
        usage: playground tcp-proxy close-connection [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: close-all-connection-with-error
        description: | 
          üßπ Close all Zazkia TCP connections which are in error state (close all with error button in Zazkia UI)
        usage: playground tcp-proxy close-all-connection-with-error
        options: []
      - name: toggle-accept-connections
        description: | 
          üôÖ‚Äç‚ôÇÔ∏è Change whether new connections can be accepted
        usage: playground tcp-proxy toggle-accept-connections
        options: []
      - name: toggle-reads-client
        description: | 
          ‚úÖ Change whether reading data from the client is enabled.
            
              See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)
        usage: playground tcp-proxy toggle-reads-client [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: toggle-reads-service
        description: | 
          ‚úÖ Change whether reading data from the service is enabled.
            
              See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)
        usage: playground tcp-proxy toggle-reads-service [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: toggle-writes-client
        description: | 
          ‚úÖ Change whether writing data to the client is enabled.
            
              See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)
        usage: playground tcp-proxy toggle-writes-client [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: toggle-writes-service
        description: | 
          ‚úÖ Change whether reading data to the service is enabled.
            
              See diagram in https://github.com/emicklei/zazkia#how-does-it-work- (or locally http://localhost:9191/help.html)
        usage: playground tcp-proxy toggle-writes-service [OPTIONS]
        options:
        - names:
          - --connection-id
          argument: CONNECTION-ID
          description: | 
            üß≤ Zazkia TCP connection id
                  
            
      - name: open-ui
        description: | 
          üåê Just open Zazkia UI (http://localhost:9191) in your browser
        usage: playground tcp-proxy open-ui
        options: []
  - name: tools
    description: | 
        üß∞ Tools commands
    usage: playground tools COMMAND
    options: []
    subcommands:
      - name: install-vscode-extension
        description: | 
          ü™Ñ Install a slightly modified version of "Shell Script Command Completion" Visual Studio Code extension (https://marketplace.visualstudio.com/items?itemName=tetradresearch.vscode-h2o)
            
            After installation, install "playground" command:
            
            * Go on a .sh file
            
            * Type Ctrl+Shift+P (or ‚åò+‚áß+P on macOS) and choose "Shell Completion: Load Command Spec (experimental)"" and then type "playground"
            
            üëâ Check documentation https://kafka-docker-playground.io/#/cli?id=%f0%9f%aa%84-setup-shell-script-command-completion-visual-studio-code-extension
        usage: playground tools install-vscode-extension
        options: []
      - name: read-avro-file
        description: | 
          üîñ Read provided avro file
        usage: playground tools read-avro-file [OPTIONS]
        options:
        - names:
          - --file
          - -f
          argument: FILE
          description: | 
            üîñ Avro file to read
            
            ‚ùï It must be absolute full path
            
            üéì Tip: use <tab> completion to trigger fzf completion
                    use <option+enter> to use the value you typed manually
            
      - name: read-parquet-file
        description: | 
          üîñ Read provided parquet file
        usage: playground tools read-parquet-file [OPTIONS]
        options:
        - names:
          - --file
          - -f
          argument: FILE
          description: | 
            üîñ Parquet file to read
            
            ‚ùï It must be absolute full path
            
            üéì Tip: use <tab> completion to trigger fzf completion
                    use <option+enter> to use the value you typed manually
            
      - name: certs-create
        description: | 
          üîê Generate keys and certificates used for SSL
        usage: playground tools certs-create [OPTIONS]
        options:
        - names:
          - --container
          argument: ["broker", "broker2", "broker3", "client", "schema-registry", "restproxy", "connect", "connect2", "connect3", "control-center", "clientrestproxy", "ksqldb-server", "conduktor"]
          description: | 
            üê≥ container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: ["broker", "broker2", "broker3", "client", "schema-registry", "restproxy", "connect", "connect2", "connect3", "control-center", "clientrestproxy", "ksqldb-server", "conduktor"]
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --output-folder
          argument: FOLDER
          description: | 
            üìÅ Folder where certificates are created
            
            Required: ‚úì Yes
            
  - name: debug
    description: | 
        üêû Debug commands
    usage: playground debug COMMAND
    options: []
    subcommands:
      - name: enable-remote-debugging
        description: | 
          ‚ú® Enable java remote debugging for container
            
            üëâ Check documentation https://kafka-docker-playground.io/#/reusables?id=%e2%9c%a8-remote-debugging
        usage: playground debug enable-remote-debugging [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: testssl
        description: | 
          üîê Testing TLS/SSL encryption using https://testssl.sh/
        usage: playground debug testssl [OPTIONS] [--] [TESTSSL ARGUMENTS...]
        options:
        - names:
          - --uri
          argument: URI
          description: | 
            host|host:port|URL|URL:port   port 443 is default, URL can only contain HTTPS protocol
            
            Required: ‚úì Yes
            
      - name: generate-diagnostics
        description: | 
          ‚õëÔ∏è Generate a diagnostic bundle with Diagnostics Bundle Tool
            
            ‚ö†Ô∏è only connect and broker containers are supported for now
            
            see https://docs.confluent.io/platform/current/tools/diagnostics-tool.html#collect-diagnostics
        usage: playground debug generate-diagnostics [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: thread-dump
        description: | 
          üéØ Take a java thread dump
            
            üîñ It will save output to a file and open with text editor set with playground config editor <editor> (default is code)
        usage: playground debug thread-dump [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: heap-dump
        description: | 
          üëª Take a heap dump
            
            üîñ It will save output to a .hprof file. VisualVM (https://visualvm.github.io/) or MAT (https://www.eclipse.org/mat/) can be used to read the file.
            
            It will run a full gc first. If you don't want this, use 
        usage: playground debug heap-dump [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --live
          argument: ""
          description: | 
            üß¨ dump only live objects; if not specified, all objects in the heap are dumped
            
        - names:
          - --histo
          argument: ""
          description: | 
            üìä print histogram of java object heap
            
      - name: tcp-dump
        description: | 
          üïµÔ∏è‚Äç‚ôÇÔ∏è Take a tcp dump (sniffing network)
        usage: playground debug tcp-dump [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --port
          argument: PORT
          description: | 
            Port on which tcp dump should be done, if not set sniffing is done on every port
            
        - names:
          - --duration
          argument: 30
          description: | 
            Duration of the dump (default is 30 seconds).
            
            Default value: 30
            
      - name: block-traffic
        description: | 
          üö´ Blocking traffic using iptables
        usage: playground debug block-traffic [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --destination
          argument: DESTINATION
          description: | 
            Destination: it could be an ip address, a container name or a hostname
            
            Required: ‚úì Yes
            
        - names:
          - --port
          argument: PORT
          description: | 
            Port on which tcp traffic should be blocked
            
        - names:
          - --action
          argument: [start, stop]
          description: | 
            üü¢ start or stop
            
            Required: ‚úì Yes
            
            Allowed values: start, stop
            
      - name: java-debug
        description: | 
          ü§é JVM arguments for SSL, Kerberos or Class Loading
        usage: playground debug java-debug [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --type
          argument: [ssl_all, ssl_handshake, class_loading, kerberos]
          description: | 
            - ssl_all: Enable all SSL debugging, i.e -Djavax.net.debug=all
            - ssl_handshake: Enable SSL handshake debugging, i.e -Djavax.net.debug=ssl:handshake
            - class_loading: Enable class loading debugging, i.e -verbose:class
            - kerberos: Enable Kerberos debugging, i.e -Dsun.security.krb5.debug=true
            
            Required: ‚úì Yes
            
            Allowed values: ssl_all, ssl_handshake, class_loading, kerberos
            
        - names:
          - --action
          argument: enable
          description: | 
            üü¢ enable or disable
            
            Default value: enable
            
            Allowed values: enable, disable
            
      - name: jscissors
        description: | 
          ‚úÇÔ∏è jscissors is an instrumentation framework and can help to analyse control flow and perform some specific logging
            
            * Control Flow Tracing: By dynamically instrumenting Java code, the tool meticulously tracks the precise sequence of executed methods at runtime. This capability offers invaluable insights into how an application navigates its logic. The tool provides a way to generate a stack trace when a method is called. 
            * Additional Logging: This enhanced logging capability provides a way to print the input arguments to a method and return value from a method. 
            * Delve into heap area: Generating heap dump at a method call will be crucial to analyze the state of JVM at a given point. The tool has capabilities to generate thread dump as well to track the state of all the threads when a method is called. 
        usage: playground debug jscissors [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --operation
          argument: ["VALUES", "RETURN_VALUE", "DELAY", "STACK"]
          description: | 
            ü•º operation to perform:
            
            * VALUES: print method input arguments
            * RETURN_VALUE: print method return value
            * THREADS: print thread dump when method is called
            * HEAP: print heap dump when method is called
            * STACK: print stack trace when method is called
            * EXCEPTION_HEAP: print heap dump when an exception is thrown during method execution
            * DELAY: print time taken for method execution
            
            Default values: VALUES, RETURN_VALUE, DELAY and STACK
            
            üéì Tip: you can pass multiple operations by specifying --operation multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: ["VALUES", "RETURN_VALUE", "DELAY", "STACK"]
            
            Allowed values: VALUES, RETURN_VALUE, THREADS, HEAP, STACK, EXCEPTION_HEAP, DELAY
            
        - names:
          - --class
          argument: CLASS
          description: | 
            class name to instrument (it supports regex like oracle.jdbc.*)
            
            Required: ‚úì Yes
            
        - names:
          - --method
          argument: .*
          description: | 
            method name to instrument (it supports regex like .*find.*)
            
            Default value: .*
            
        - names:
          - --action
          argument: enable
          description: | 
            üü¢ enable or disable
            
            Default value: enable
            
            Allowed values: enable, disable
            
      - name: flight-recorder
        description: | 
          üõ©Ô∏è Record flight recorder
            
            Read more about it at https://www.baeldung.com/java-flight-recorder-monitoring
            
            Open the jfr file with JDK Mission Control JMC(https://jdk.java.net/jmc/)
        usage: playground debug flight-recorder [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --action
          argument: enable
          description: | 
            üü¢ enable or disable
            
            Default value: enable
            
            Allowed values: enable, disable
            
      - name: log-level
        description: | 
          üß¨ Set log level for any package
        usage: playground debug log-level COMMAND
        options: []
  - name: log-level
    description: | 
        üß¨ Set log level for any package
    usage: playground debug log-level COMMAND
    options: []
    subcommands:
      - name: get
        description: | 
          Get log levels
        usage: playground debug log-level get [OPTIONS]
        options:
        - names:
          - --package
          - -p
          argument: PACKAGE
          description: | 
            Package name
            
      - name: set
        description: | 
          Set log level for specific logger
        usage: playground debug log-level set [OPTIONS]
        options:
        - names:
          - --package
          - -p
          argument: PACKAGE
          description: | 
            üì¶ Package name
            
            Required: ‚úì Yes
            
        - names:
          - --level
          - -l
          argument: [INFO, WARN, DEBUG, TRACE]
          description: | 
            ‚ùïLog level
            
            Required: ‚úì Yes
            
            Allowed values: INFO, WARN, DEBUG, TRACE
            

  - name: get-jmx-metrics
    description: | 
        üî¢ Get JMX metrics from a container
        
        üëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%94%a2-jmx-metrics
    usage: playground get-jmx-metrics [OPTIONS]
    options:
    - names:
      - --container
      - -c
      argument: connect
      description: | 
        üê≥ Container name
        
        üéì Tip: you can pass multiple containers by specifying --container multiple times
        
        Repeatable: ‚úì Yes
        
        Default value: connect
        
    - names:
      - --open
      - -o
      argument: ""
      description: | 
        üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)
        
    - names:
      - --domain
      - -d
      argument: DOMAIN
      description: | 
        Domain name
        
    subcommands:
  - name: container
    description: | 
        üê≥ Container commands
    usage: playground container COMMAND
    options: []
    subcommands:
      - name: get-properties
        description: | 
          üìù Get properties file from a container
            
            üëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%f0%9f%93%9d-see-properties-file
        usage: playground container get-properties [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: recreate
        description: | 
          üí´ Recreate container(s)
            
            üëâ Check documentation https://kafka-docker-playground.io/#/how-to-use?id=%e2%99%bb%ef%b8%8f-re-create-containers
        usage: playground container recreate [OPTIONS]
        options:
        - names:
          - --ignore-current-versions
          argument: ""
          description: | 
            Ignore current confluent platform version
            
            By default, the current version is used
            
      - name: get-ip-addresses
        description: | 
          üñ•Ô∏è  Get ip address of running containers
        usage: playground container get-ip-addresses
        options: []
      - name: kill-all
        description: | 
          üíÄ Kill all containers
        usage: playground container kill-all
        options: []
      - name: logs
        description: | 
          üïµÔ∏è  Tail and follow container logs
        usage: playground container logs [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --open
          - -o
          argument: ""
          description: | 
            üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)
            
            Conflicts with: --wait-for-log
            
        - names:
          - --wait-for-log
          - -w
          argument: LOG
          description: | 
            üò¥ Wait until log appears
            
            Conflicts with: --open
            
        - names:
          - --max-wait
          - -m
          argument: 600
          description: | 
            ‚è≥ Max time in seconds to wait when using --wait-for-log (default 600s)
            
            Default value: 600
            
            Conflicts with: --open
            
      - name: display-error-all-containers
        description: | 
          üî• Display all ERROR/FATAL logs in all containers. Useful for quick troubleshooting
        usage: playground container display-error-all-containers
        options: []
      - name: ssh
        description: | 
          üõ¨ SSH into container
        usage: playground container ssh [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --shell
          - -s
          argument: bash
          description: | 
            üíæ Shell to use (default is bash)
            
            Default value: bash
            
            Allowed values: bash, sh, ksh, zsh
            
      - name: change-jdk
        description: | 
          ü§é Change java JDK version using Azul JDK (https://www.azul.com/downloads/#downloads-table-zulu)
            
            PS: It works for UBI8 docker images only
        usage: playground container change-jdk [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --version
          argument: [8, 11, 17, 21, 22]
          description: | 
            ü§é JDK version to use
            
            Required: ‚úì Yes
            
            Allowed values: 8, 11, 17, 21, 22
            
      - name: exec
        description: | 
          ü™Ñ Execute command in a container
        usage: playground container exec [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --command
          argument: COMMAND
          description: | 
            üì≤ Command to execute
            
            Required: ‚úì Yes
            
        - names:
          - --root
          argument: ""
          description: | 
            üëë Run command as root
            
        - names:
          - --shell
          argument: bash
          description: | 
            üíæ Shell to use (default is bash)
            
            Default value: bash
            
            Allowed values: bash, sh, ksh, zsh
            
      - name: restart
        description: | 
          üîÅ Restart a container
        usage: playground container restart [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: pause
        description: | 
          ‚è∏Ô∏è  Pause a container
        usage: playground container pause [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: resume
        description: | 
          ‚èØÔ∏è  Resume a container
        usage: playground container resume [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: kill
        description: | 
          üî´ Kill a container
        usage: playground container kill [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
      - name: set-environment-variables
        description: | 
          üì¶  Set environment variable(s) for a container
            
            üéì Tip: you can pass multiple environment variables by specifying --env multiple times
            
            Example: --env "KAFKA_OPTS: -verbose:class" --env "CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR,org.apache.kafka.connect.runtime.rest.RestServer=ERROR"
        usage: playground container set-environment-variables [OPTIONS]
        options:
        - names:
          - --container
          - -c
          argument: connect
          description: | 
            üê≥ Container name
            
            üéì Tip: you can pass multiple containers by specifying --container multiple times
            
            Repeatable: ‚úì Yes
            
            Default value: connect
            
        - names:
          - --env
          argument: ENV
          description: | 
            üì¶ Environment variables to set
            
            üéì Tip: you can pass multiple environment variables by specifying --env multiple times
            
            Repeatable: ‚úì Yes
            
            Conflicts with: --restore-original-values
            
        - names:
          - --restore-original-values
          argument: ""
          description: | 
            üßΩ Restore back original values before any changes was made
            
            Conflicts with: --env
            
        - names:
          - --mount-jscissors-files
          argument: ""
          description: | 
            Mount jscissors files for debugging
            
  - name: topic
    description: | 
        üó≥ Topic commands
    usage: playground topic COMMAND
    options: []
    subcommands:
      - name: get-number-records
        description: | 
          üíØ Get number of records in a topic
        usage: playground topic get-number-records [OPTIONS]
        options:
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
      - name: display-consumer-offsets
        description: | 
          üì≠ Display content of __consumer_offsets topic
        usage: playground topic display-consumer-offsets [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: list
        description: | 
          üîò List topics
        usage: playground topic list
        options: []
      - name: describe
        description: | 
          üî¨ Describe topic
        usage: playground topic describe [OPTIONS]
        options:
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: set-schema-compatibility
        description: | 
          üõ°Ô∏è Change topic's schema compatibility
        usage: playground topic set-schema-compatibility [OPTIONS]
        options:
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
        - names:
          - --compatibility
          argument: [BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE]
          description: | 
            Schema Registry compatibility rule
            
            Required: ‚úì Yes
            
            Allowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: consume
        description: | 
          üì• Consume topic from beginning
        usage: playground topic consume [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
        - names:
          - --max-messages
          argument: 100
          description: | 
            Max number of messages to display (default is 100)
            
            You can use -1 to display all messages
            
            Default value: 100
            
        - names:
          - --min-expected-messages
          argument: 0
          description: | 
            Minimum expected number of messages to be present in topic, returns an error if this is not the case
            
            Note: --topic should be specified in this case.
            
            Default value: 0
            
        - names:
          - --grep
          argument: 
          description: | 
            Verify that topic content contains record which contains specified string
            
            Default value: 
            
        - names:
          - --timeout
          argument: 60
          description: | 
            Max number of seconds to wait when --min-expected-messages is used.
            
            Default is 60 seconds
            
            Default value: 60
            
        - names:
          - --tail
          argument: ""
          description: | 
            Tail on logs.
            
            Conflicts with: --min-expected-messages, --max-messages, --open
            
        - names:
          - --plot-latencies-timestamp-field
          argument: TIMESTAMP
          description: | 
            üó≥ Timestamp field name that represents when record was created in source system
            
        - names:
          - --key-subject
          argument: KEY-SUBJECT
          description: | 
            üìõ Subject for key in schema-registry to use (useful when data was produced with --key-subject-name-strategy other than TopicNameStrategy)
            
            Note: --topic should be specified in this case.
            
        - names:
          - --value-subject
          argument: VALUE-SUBJECT
          description: | 
            üìõ Subject for value in schema-registry to use (useful when data was produced with --value-subject-name-strategy other than TopicNameStrategy)
            
            Note: --topic should be specified in this case.
            
        - names:
          - --max-characters
          argument: 3000
          description: | 
            Max characters per message to display (default is 3000)
            
            Default value: 3000
            
        - names:
          - --open
          - -o
          argument: ""
          description: | 
            üîñ Save full dump of topic to a file and open with text editor set with playground config editor <editor> (default is code)
            
            Conflicts with: --max-characters, --tail, --min-expected-messages
            
      - name: produce
        description: | 
          üì§ Produce to a topic
            
            See video tutorial https://youtu.be/mbzHCewG_XE
        usage: playground topic produce [OPTIONS]
        options:
        - names:
          - --key
          argument: KEY
          description: | 
            üóùÔ∏è Key to use. If not set, no key is used.
            
            üî• You can either:
            
            * Set your own schema (avro, json-schema, protobuf) within single quotes (see examples) 
            
            * You can also generate json data using json or sql format using syntax from https://github.com/MaterializeInc/datagen
            
            * Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion
            
            * Directly set payload ("%g" can be used to generate a counter)
            
            In case of 'raw' data (i.e not using schema):
            
            If the key contain a number, it will be used as starting point and incremented for each record. 
            
            Example: key1 will start with key1, then key2, etc..
            Example: mykey-10-suffix will start with mykey-10-suffix then mykey-11-suffix, etc..
            
            "%g" can also be used to generate a counter
            
            Example: key%g will start with key1, then key2, etc..
            
            Otherwise, the key will be same for all records.
            
        - names:
          - --value
          argument: VALUE
          description: | 
            üî• You can either:
            
            * Set your own schema (avro, json-schema, protobuf) with stdin (see example section). 
            
            * You can also generate json data using json or sql format using syntax from https://github.com/MaterializeInc/datagen
            
            * Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion
            
            * Directly set payload ("%g" can be used to generate a counter)
            
            Default value: -
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --debug
          - -d
          argument: ""
          description: | 
            debug mode (internal)
            
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
            Required: ‚úì Yes
            
        - names:
          - --nb-messages
          argument: 1
          description: | 
            üíØ Number of messages to produce (default is 1)
               
            üéì  - if > <value of --max-nb-messages-per-batch> (default 300000), messages will be sent in batches of <value of --max-nb-messages-per-batch> (default 300000) records
                - if you set it to -1, an infinite number of records will also be sent in batches
            
            Default value: 1
            
        - names:
          - --max-nb-messages-per-batch
          argument: 300000
          description: | 
            üîº Max number of messages to send per batch when --nb-messages > --max-nb-messages-per-batch
               if --nb-messages is set to -1, this is the number of messages sent per batch
               default is 300000
            
            Default value: 300000
            
        - names:
          - --max-nb-messages-to-generate
          argument: MAX-NB-MESSAGES-TO-GENERATE
          description: | 
            üî® Max number of different messages to generate.
            
               - when protobuf is used, default is 50 as protobuf generation is really slow
               - when --record-size is set, default is 100
               --when nb-messages is set to -1, default is 1000
               - otherwise default is 100000
            
        - names:
          - --sleep-time-between-batch
          argument: 0
          description: | 
            üí§ Sleep time in seconds between batches
               default is 0
            
            Default value: 0
            
        - names:
          - --nb-partitions
          argument: 1
          description: | 
            üî¢ Number of partitions for the topic. (default is 1)
            
            ‚ùå Important: If topic is existing, it will be re-created before producing to topic.
            
            Default value: 1
            
        - names:
          - --compression-codec
          argument: [gzip, snappy, lz4, zstd]
          description: | 
            ü§ê The compression codec: either 'gzip', 'snappy', 'lz4', or 'zstd'
            If not set, there is no compression
            
            Allowed values: gzip, snappy, lz4, zstd
            
        - names:
          - --compatibility
          argument: [BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE]
          description: | 
            Schema Registry compatibility rule
            
            Allowed values: BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE, NONE
            
        - names:
          - --key-subject-name-strategy
          argument: [TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy]
          description: | 
            Key Subject Name Strategy
            
            Allowed values: TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy
            
        - names:
          - --value-subject-name-strategy
          argument: [TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy]
          description: | 
            Value Subject Name Strategy
            
            Allowed values: TopicNameStrategy, RecordNameStrategy, TopicRecordNameStrategy
            
        - names:
          - --headers
          argument: HEADERS
          description: | 
            üöè Headers to use for all records. If not set, no header is used.
            
            Example: --headers "header1:value1,header2:value2"
            
            Note: CP 7.2+ is required.
            
        - names:
          - --forced-key
          argument: FORCED-KEY
          description: | 
            ‚ò¢Ô∏è Key to use for all records. 
            
            üéì Tip: use --generate-only first with avro, json-schema or protobuf to get skeleton of messages and then use --forced-key to send the message you need. 
            
        - names:
          - --forced-value
          argument: FORCED-VALUE
          description: | 
            ‚ò¢Ô∏è Value to use for all records. 
            
            üéì Tip: use --generate-only first with avro, json-schema or protobuf to get skeleton of messages and then use --forced-value to send the message you need. 
            
        - names:
          - --generate-only
          argument: ""
          description: | 
            üö™ Only generate messages without sending to kafka topic.
            
            Used with --forced-value, this is a powerful way to send specific messages.
            
        - names:
          - --tombstone
          argument: ""
          description: | 
            ‚ö∞Ô∏è Generate tombstone (record with null value). 
            
            Setting --key is recommended when this flag is used. 
            If not set, the key will also be null, hence generating a null record (both key and value being null)
            
            Note: CP 7.2+ is required.
            
        - names:
          - --validate
          argument: ""
          description: | 
            ‚òëÔ∏è Validate schema according to connect sink converter used
            
        - names:
          - --derive-key-schema-as
          argument: [AVRO, JSON, PROTOBUF]
          description: | 
            ü™Ñ Use playground schema derive-schema command to deduce schema from key payload
            
            Possible values:
            
            - AVRO
            - JSON (json schema)
            - PROTOBUF
            
            Allowed values: AVRO, JSON, PROTOBUF
            
        - names:
          - --derive-value-schema-as
          argument: [AVRO, JSON, PROTOBUF]
          description: | 
            ü™Ñ Use playground schema derive-schema command to deduce schema from value payload
            
            Possible values:
            
            - AVRO
            - JSON (json schema)
            - PROTOBUF
            
            Allowed values: AVRO, JSON, PROTOBUF
            
        - names:
          - --no-null
          argument: ""
          description: | 
            ü™π Never generate null fields even for optional fields
            
            N.B: only work with avro and json-schema
            
        - names:
          - --consume
          argument: ""
          description: | 
            üì• After producing, directly consume topic.
            
        - names:
          - --delete-topic
          argument: ""
          description: | 
            ‚ùå Delete topic and associated schema/subject if applicable before producing data.
            
        - names:
          - --reference
          argument: REFERENCE
          description: | 
            üñáÔ∏è Schema reference
            
            See docs: https://docs.confluent.io/platform/7.6/schema-registry/fundamentals/serdes-develop/index.html#schema-references
            
            üéì Tip: you can pass multiple references by specifying --reference multiple times
            
            üî• You can either:
            
            * Set your own schema (avro, json-schema, protobuf) within single quotes (see examples) 
            
            * Use completion to select predefined schemas (or use your own schema file) üéì Tip: use <tab> completion to trigger fzf completion
            
            Repeatable: ‚úì Yes
            
        - names:
          - --validate-config
          argument: [scrub.invalid.names=true, enhanced.avro.schema.support=true, connect.meta.data=false, object.additional.properties=false, use.optional.for.nonrequired=true, ignore.default.for.nullables=true, generalized.sum.type.support=true, enhanced.protobuf.schema.support=true, generate.index.for.unions=false, int.for.enums=true, optional.for.nullables=true, generate.struct.for.nulls=true, wrapper.for.nullables=true, wrapper.for.raw.primitives=false]
          description: | 
            üî© Converter configuration parameters to use 
            
            See docs: https://docs.confluent.io/platform/current/schema-registry/connect.html#using-kconnect-long-with-sr
            
            üéì Tip: you can pass multiple parameters by specifying --validate-config multiple times
            
            Repeatable: ‚úì Yes
            
            Allowed values: scrub.invalid.names=true, enhanced.avro.schema.support=true, connect.meta.data=false, object.additional.properties=false, use.optional.for.nonrequired=true, ignore.default.for.nullables=true, generalized.sum.type.support=true, enhanced.protobuf.schema.support=true, generate.index.for.unions=false, int.for.enums=true, optional.for.nullables=true, generate.struct.for.nulls=true, wrapper.for.nullables=true, wrapper.for.raw.primitives=false
            
        - names:
          - --producer-property
          argument: PRODUCER-PROPERTY
          description: | 
            üî© Producer configuration parameters to use 
            
            See docs: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#cp-config-producer
            
            üéì Tip: you can pass multiple parameters by specifying --producer-property multiple times
            
            Example: --producer-property "max.request.size=990485760" --producer-property "client.id=myid"
            
            Repeatable: ‚úì Yes
            
        - names:
          - --record-size
          argument: 0
          description: | 
            üèãÔ∏è Record size in bytes, eg. 1048576 for 1MB
            
            üì¢ If size is > 1Mb, --producer-property max.request.size and topic max.message.bytes will be automatically set to support the record size.
            
            Default value: 0
            
        - names:
          - --value-schema-id
          argument: VALUE-SCHEMA-ID
          description: | 
            üî∞ Do not auto register schema and specify schema id to use. 
            
            It sets --property value.schema.id=x --property auto.register=false --property use.latest.version=true
            
      - name: create
        description: | 
          üÜï Create topic
        usage: playground topic create [OPTIONS] [--] [ARGUMENTS...]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
            Required: ‚úì Yes
            
        - names:
          - --nb-partitions
          argument: 1
          description: | 
            Number of partitions for the topic. (default is 1)
            
            Default value: 1
            
      - name: delete
        description: | 
          ‚ùå Delete topic and associated schema/subject if applicable
        usage: playground topic delete [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
            Required: ‚úì Yes
            
        - names:
          - --skip-delete-schema
          argument: ""
          description: | 
            üî∞ Do not delete subject/schema
            
      - name: alter
        description: | 
          ü™õ Alter topic config
        usage: playground topic alter [OPTIONS] [--] [ARGUMENTS...]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --topic
          - -t
          argument: TOPIC
          description: | 
            üó≥ Topic name
            
            Required: ‚úì Yes
            
  - name: connector-plugin
    description: | 
        üîå Connector-plugin commands
    usage: playground connector-plugin COMMAND
    options: []
    subcommands:
      - name: search-jar
        description: | 
          ‚òï List jars for a connector plugin from confluent hub https://www.confluent.io/hub/ Search for specific class and display method signatures
        usage: playground connector-plugin search-jar [OPTIONS]
        options:
        - names:
          - --connector-plugin
          - -c
          argument: CONNECTOR-PLUGIN
          description: | 
            üîå Connector plugin name
            
            üéì Tip: use <tab> completion to trigger fzf completion
            
            Required: ‚úì Yes
            
        - names:
          - --connector-tag
          argument: CONNECTOR_TAG
          description: | 
            üîó Connector version to use
            
            By default, for each connector, the latest available version on Confluent Hub is used
            
            üéì Tip: set to " " in order to select the version dynamically
            
            Conflicts with: --connector-zip
            
        - names:
          - --class
          argument: CLASS
          description: | 
            ‚òï Java class name to search for in all jars
            
      - name: versions
        description: | 
          üíØ List versions for a connector plugin from confluent hub https://www.confluent.io/hub/
        usage: playground connector-plugin versions [OPTIONS]
        options:
        - names:
          - --connector-plugin
          - -c
          argument: CONNECTOR-PLUGIN
          description: | 
            üîå Connector plugin name
            
            üéì Tip: use <tab> completion to trigger fzf completion
            
            Required: ‚úì Yes
            
        - names:
          - --force-refresh
          argument: ""
          description: | 
            ‚ò¢Ô∏è Force refresh.
            
        - names:
          - --last
          argument: LAST
          description: | 
            üÜï Number of last versions to show
            
            Conflicts with: --all
            
      - name: display-last-updated
        description: | 
          üÜï List last updated connector plugins from confluent hub https://www.confluent.io/hub/
        usage: playground connector-plugin display-last-updated [OPTIONS]
        options:
        - names:
          - --days
          argument: 3
          description: | 
            üìÖ Number of days to look back
            
            Default is 3 days
            
            Default value: 3
            
        - names:
          - --vendor
          argument: VENDOR
          description: | 
            üè¢ Only display results for this vendor
            
      - name: sourcecode
        description: | 
          üßë‚Äçüíª open source code url
            
            You can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode
            
        usage: playground connector-plugin sourcecode [OPTIONS]
        options:
        - names:
          - --connector-plugin
          - -c
          argument: CONNECTOR-PLUGIN
          description: | 
            üîå Connector plugin name
            
            üéì Tip: use <tab> completion to trigger fzf completion
            
            Required: ‚úì Yes
            
        - names:
          - --connector-tag
          argument: CONNECTOR_TAG
          description: | 
            üîó Connector version to use
            
            By default, for each connector, the latest available version on Confluent Hub is used
            
            üéì Tip: set to " " in order to select the version dynamically
            
            üéì Tip: you can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode
            
            Repeatable: ‚úì Yes
            
  - name: connector
    description: | 
        üîó Connector commands
    usage: playground connector COMMAND
    options: []
    subcommands:
      - name: status
        description: | 
          üß© Show status of all connectors
        usage: playground connector status [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: oracle-cdc-xstream
        description: | 
          üÖæÔ∏è Specific Oracle CDC Xstream commands
            
        usage: playground connector oracle-cdc-xstream COMMAND
        options: []
      - name: offsets
        description: | 
          üíà Handle source and sink connectors offsets
            
              Note: First-class offsets (KIP-875) is only available if CP > 7.6
            
        usage: playground connector offsets COMMAND
        options: []
      - name: plugins
        description: | 
          üé® Show all connector plugins installed. You can also display transforms, converters and predicates using --all flag
        usage: playground connector plugins [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --all
          argument: ""
          description: | 
            üåï Show also transforms, converters, predicates available
            
      - name: pause
        description: | 
          ‚è∏Ô∏è  Pause connector
        usage: playground connector pause [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: versions
        description: | 
          üßû Get current and latest versions available on Confluent Hub for connector(s) used in example
            
        usage: playground connector versions
        options: []
      - name: sourcecode
        description: | 
          üßë‚Äçüíª open source code url for connector(s) used in example
            
            You can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode
            
        usage: playground connector sourcecode [OPTIONS]
        options:
        - names:
          - --connector-tag
          argument: CONNECTOR_TAG
          description: | 
            üîó Connector version to use
            
            By default, for each connector, the current version is used
            
            üéì Tip: set to " " in order to select the version dynamically
            
            üéì Tip: you can compare different sourcecode versions by specifying --connector-tag two times, in such case it will open github in comparison mode
            
            Repeatable: ‚úì Yes
            
      - name: restart
        description: | 
          ‚ôªÔ∏è  Restart connector
        usage: playground connector restart [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --task-id
          - -t
          argument: TASK_ID
          description: | 
            üîß Restart specific task ID only (instead of restarting entire connector)
            
      - name: stop
        description: | 
          üõë Stop connector (only available if CP > 7.5)
        usage: playground connector stop [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: resume
        description: | 
          ‚èØÔ∏è  Resume connector
        usage: playground connector resume [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: delete
        description: | 
          üóëÔ∏è  Delete connector
        usage: playground connector delete [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: show-lag
        description: | 
          üê¢ Show lag of sink connector
            
            It will run until all lag becomes 0 (press ctrl-c to exit)
            
        usage: playground connector show-lag [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --interval
          argument: 20
          description: | 
            Interval between lag checks (default is 20 seconds).
            
            Default value: 20
            
        - names:
          - --max-wait
          argument: 0
          description: | 
            ‚è≥ Max time in seconds to wait for lag to become 0. If set to 0 (default), it will run until all lag becomes 0.
            
            Default value: 0
            
      - name: show-config
        description: | 
          üß∞ Show current connector config that was applied
            
            use --force-rest-endpoint to get results with REST API /config endpoint (https://docs.confluent.io/platform/current/connect/references/restapi.html#get--connectors-(string-name)-config)
            
        usage: playground connector show-config [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --no-clipboard
          argument: ""
          description: | 
            do not copy to clipboard (internal)
            
        - names:
          - --force-rest-endpoint
          argument: ""
          description: | 
            ‚ò¢Ô∏è Force using REST API /config endpoint (https://docs.confluent.io/platform/current/connect/references/restapi.html#get--connectors-(string-name)-config)
            
      - name: show-config-parameters
        description: | 
          üî© Show all possible configuration parameters of connector
        usage: playground connector show-config-parameters [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --open
          - -o
          argument: ""
          description: | 
            üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)
            
        - names:
          - --force-refresh
          argument: ""
          description: | 
            ‚ò¢Ô∏è Force refresh.
            
        - names:
          - --only-show-file-path
          argument: ""
          description: | 
            üìÇ Only show the path of the file containing the configuration parameters
            
        - names:
          - --only-show-json
          argument: ""
          description: | 
            üìó Only show list of all available parameters for connector (with default value when applicable)
            
        - names:
          - --only-show-json-file-path
          argument: ""
          description: | 
            üìÇ Only show the path of the json file containing the configuration parameters
            
      - name: select-config
        description: | 
          üóúÔ∏è Easily select config from all possible configuration parameters of connector
            
            üéì Tip: use <tab> to select multiple config at once !
        usage: playground connector select-config [OPTIONS]
        options:
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: snippets
        description: | 
          üîå useful snippets
        usage: playground connector snippets [OPTIONS]
        options:
        - names:
          - --converter
          argument: [avro, protobuf, json-schema, json, json-schema-enabled, string, bytearray]
          description: | 
            üîå Converter
            
            Allowed values: avro, protobuf, json-schema, json, json-schema-enabled, string, bytearray
            
        - names:
          - --dlq
          argument: ""
          description: | 
            üíÄ dlq
            
      - name: open-docs
        description: | 
          üßë‚Äçüéì Open connector documentation of currently running conector(s)
        usage: playground connector open-docs [OPTIONS]
        options:
        - names:
          - --only-show-url
          argument: ""
          description: | 
            üåê Only show url
            
      - name: log-level
        description: | 
          üß¨ Set connect log level
            
            üéì Tip: it will also set io.confluent.kafka.schemaregistry.client.rest.RestService (to see schema registry rest requests) and org.apache.kafka.connect.runtime.TransformationChain (to see records before and after SMTs)
                    it will also set org.apache.kafka.connect.runtime.WorkerSinkTask for sink and org.apache.kafka.connect.runtime.WorkerSourceTask for source connectors.
        usage: playground connector log-level [OPTIONS]
        options:
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --level
          - -l
          argument: [INFO, WARN, DEBUG, TRACE]
          description: | 
            ‚ùïLog level
            
            Required: ‚úì Yes
            
            Allowed values: INFO, WARN, DEBUG, TRACE
            
      - name: logs
        description: | 
          üïµÔ∏è  Tail and follow connect logs
            
            For onprem connectors, this is basically a shortcut for "playground container logs --container connect", --connector flag is not relevant
            
            For Fully Managed connectors, limitations apply (see https://docs.confluent.io/cloud/current/connectors/logging-cloud-connectors.html#using-ccloud-cli)
        usage: playground connector logs [OPTIONS]
        options:
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --open
          - -o
          argument: ""
          description: | 
            üîñ Save output to a file and open with text editor set with playground config editor <editor> (default is code)
            
            Conflicts with: --wait-for-log
            
        - names:
          - --wait-for-log
          - -w
          argument: LOG
          description: | 
            üò¥ Wait until log appears
            
            Conflicts with: --open
            
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: open-ccloud-connector-in-browser
        description: | 
          ü§ñ Open Fully Managed connector in browser (Confluent Cloud dashboard)
        usage: playground connector open-ccloud-connector-in-browser [OPTIONS]
        options:
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
        - names:
          - --browser
          argument: BROWSER
          description: | 
            üåé browser name
            
            Default browser from your system if not set
            
      - name: connect-migration-utility
        description: | 
          üß© Run Kafka Connector Migration Utility (see https://github.com/confluentinc/connect-migration-utility/) on running connect cluster
            
            The connector example should be ran with --environment flag set to <ccloud>
            
            See a full example at https://github.com/vdesabou/kafka-docker-playground/blob/master/ccloud/connect-migration-utility/README.md
            
        usage: playground connector connect-migration-utility COMMAND
        options: []
      - name: create-or-update
        description: | 
          üßë‚Äçüé®  Create or update connector
        usage: playground connector create-or-update [JSON] [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --no-clipboard
          argument: ""
          description: | 
            do not copy to clipboard (internal)
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            Required: ‚úì Yes
            
        - names:
          - --level
          - -l
          argument: [INFO, WARN, DEBUG, TRACE]
          description: | 
            ‚ùïLog level
            
            ‚ö†Ô∏è Not available for ccloud connectors
            
            Allowed values: INFO, WARN, DEBUG, TRACE
            
        - names:
          - --package
          - -p
          argument: PACKAGE
          description: | 
            Package name
            
        - names:
          - --wait-for-zero-lag
          argument: ""
          description: | 
            üò¥ Wait until lag becomes 0
            
        - names:
          - --validate
          argument: ""
          description: | 
            ‚úÖ Validate config using PUT /connector-plugins/(string:name)/config/validate (https://docs.confluent.io/platform/current/connect/references/restapi.html#put--connector-plugins-(string-name)-config-validate)
            
        - names:
          - --skip-automatic-connector-config
          argument: ""
          description: | 
            ü§ñ If example is run (playground run) with --environment flag, automatic configuration to adapt to the environment is added. 
            
            This flag allows to skip this automatic configuration (only useful to reproduce issues)
            
        - names:
          - --offsets
          argument: OFFSETS
          description: | 
            üìç Create connector with offsets (https://docs.confluent.io/cloud/current/connectors/offsets.html#create-connectors-with-offsets)
            
            ‚ö†Ô∏è Only available for ccloud connectors, the connector should not really exists
            
        - names:
          - --initial-state
          argument: [RUNNING, PAUSED, STOPPED]
          description: | 
            ü™µ Create connector with specific status (https://cwiki.apache.org/confluence/display/KAFKA/KIP-980%3A+Allow+creating+connectors+in+a+stopped+state)
            
            Only available if CP > 7.7
            
            ‚ö†Ô∏è not available for ccloud connectors
            
            Allowed values: RUNNING, PAUSED, STOPPED
            
      - name: update
        description: | 
          üõ†Ô∏è Update connector configuration by opening current connector config in text editor set with playground config editor <editor> (default is code). Once file is saved, the new configuration is updated.
        usage: playground connector update [OPTIONS]
        options:
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
  - name: oracle-cdc-xstream
    description: | 
        üÖæÔ∏è Specific Oracle CDC Xstream commands
        
    usage: playground connector oracle-cdc-xstream COMMAND
    options: []
    subcommands:
      - name: generate-report
        description: | 
          ‚öôÔ∏è Generate and open oracle cdc xstream connector diagnostics, see https://docs.confluent.io/kafka-connectors/oracle-xstream-cdc-source/current/troubleshooting.html#connector-diagnostics-script
            
        usage: playground connector oracle-cdc-xstream generate-report
        options: []
      - name: debug
        description: | 
          üêû Execute various SQL commands to debug xstream components
            
        usage: playground connector oracle-cdc-xstream debug
        options: []
  - name: offsets
    description: | 
        üíà Handle source and sink connectors offsets
        
          Note: First-class offsets (KIP-875) is only available if CP > 7.6
        
    usage: playground connector offsets COMMAND
    options: []
    subcommands:
      - name: get
        description: | 
          üèπ Get current offsets for source and sink connectors
            
            ‚ö†Ô∏è Available for ccloud source connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)
            
        usage: playground connector offsets get [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: reset
        description: | 
          üÜï Reset offsets for source and sink connectors
            
            ‚ö†Ô∏è Available for ccloud connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)
            
        usage: playground connector offsets reset [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: alter
        description: | 
          ‚õèÔ∏è Alter offsets for source and sink connectors
            
            ‚ö†Ô∏è Available for ccloud connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)
            
        usage: playground connector offsets alter [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
      - name: get-offsets-request-status
        description: | 
          üëÅÔ∏è‚Äçüó®Ô∏è Get the status of the previous offset request
            
            ‚ö†Ô∏è Available for ccloud source connectors (see https://docs.confluent.io/cloud/current/connectors/offsets.html)
            
        usage: playground connector offsets get-offsets-request-status [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
        - names:
          - --connector
          - -c
          argument: CONNECTOR
          description: | 
            üîó Connector name
            
            üéì Tip: If not specified, the command will apply to all connectors
            
  - name: connect-migration-utility
    description: | 
        üß© Run Kafka Connector Migration Utility (see https://github.com/confluentinc/connect-migration-utility/) on running connect cluster
        
        The connector example should be ran with --environment flag set to <ccloud>
        
        See a full example at https://github.com/vdesabou/kafka-docker-playground/blob/master/ccloud/connect-migration-utility/README.md
        
    usage: playground connector connect-migration-utility COMMAND
    options: []
    subcommands:
      - name: discovery
        description: | 
          üë®‚Äçüî¨ Discover connectors in the local connect cluster and export their configurations to files
              
              see https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#step-1-specify-the-connector-configuration
            
        usage: playground connector connect-migration-utility discovery [OPTIONS]
        options:
        - names:
          - --verbose
          - -v
          argument: ""
          description: | 
            üêû Show command being ran.
            
      - name: migrate
        description: | 
          ü™Ñ Migrate discovered connectors to fully managed connectors
            
              see https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#step-2-migrate-the-connector
              ‚ö†Ô∏è <discovery> command should be run first
            
        usage: playground connector connect-migration-utility migrate [OPTIONS]
        options:
        - names:
          - --migration-mode
          argument: create
          description: | 
            - create: Create connector without any offset consideration
            - stop_create_latest_offset: Create a connector with no data loss/duplication (the python script stops the self-managed connector and fetches the latest offset and creates a fully-managed connector on Confluent Cloud using the fetched offset). See https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#create-a-connector-with-no-data-lossduplication.
            - create_latest_offset: Create a connector with no downtime (the python script fetches the latest offset without stopping the connector and creates a fully-managed connector on Confluent Cloud using the fetched offset. This option may cause data duplication as the self-managed connector is still running). See https://github.com/confluentinc/connect-migration-utility/tree/master?tab=readme-ov-file#create-a-connector-with-no-downtime.
            
            Default value: create
            
            Allowed values: stop_create_latest_offset, create, create_latest_offset
            
  - name: ec2
    description: | 
        ‚ú® Create and manage AWS EC2 instances (using Cloud Formation) to run kafka-docker-playground
        
        ü™Ñ Open EC2 instances directly in Visual Studio code using Remote Development (over SSH)
    usage: playground ec2 COMMAND
    options: []
    subcommands:
      - name: create
        description: | 
          üë∑ Create kafka-docker-playground EC2 instance using AWS Cloud Formation
            
            üîê AWS EC2 pem file for the ec2 instance will be created and stored in root folder (make sure to do backup)
            
            üåç Region being used will be the one set in your environment (`aws configure get region`) either by AWS_REGION environment variable or ~/.aws/config
        usage: playground ec2 create [OPTIONS]
        options:
        - names:
          - --instance-type
          argument: t3.2xlarge
          description: | 
            üßë‚Äçüíª instance type. default is t3.2xlarge
            
            Default value: t3.2xlarge
            
            Allowed values: c1.medium, c1.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, c3.large, c3.xlarge, c4.2xlarge, c4.4xlarge, c4.large, c4.xlarge, m1.large, m1.medium, m1.small, m1.xlarge, m2.2xlarge, m2.4xlarge, m2.xlarge, m3.2xlarge, m3.large, m3.medium, m3.xlarge, m4.10xlarge, m4.2xlarge, m4.4xlarge, m4.large, m4.xlarge, t1.micro, t2.large, t2.medium, t2.micro, t2.nano, t2.small, t3.2xlarge
            
        - names:
          - --size
          argument: 1000
          description: | 
            üíæ instance size in Gb. default is 1000 Gb
            
            Default value: 1000
            
        - names:
          - --suffix
          argument: SUFFIX
          description: | 
            üìÆ suffix to add to instance name pg-${username}-${suffix} 
            
            if not set, default is pg-${username}-${6-chars-random-string}
            
      - name: delete
        description: | 
          ‚ùå Delete an EC2 instance created with Cloud Formation
            
            WARNING:  This will delete your cloud formation and associated EC2 instance
        usage: playground ec2 delete [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üåÄ ec2 instance cloudformation (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
      - name: open
        description: | 
          üë®‚Äçüíª Open an EC2 instance using Visual Studio code
            
            üîê Only your current ip address will be allowed to connect
        usage: playground ec2 open [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üñ•Ô∏è ec2 instance (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
        - names:
          - --enable-sync-repro-folder
          argument: ""
          description: | 
            üëâ Enable sync reproduction-models folder between local and ec2 instance
            
      - name: list
        description: | 
          üîò List all EC2 instance
        usage: playground ec2 list
        options: []
      - name: stop
        description: | 
          üî¥ Stop an EC2 instance
        usage: playground ec2 stop [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üñ•Ô∏è ec2 instance (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
      - name: start
        description: | 
          üü¢ Start an EC2 instance
        usage: playground ec2 start [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üñ•Ô∏è ec2 instance (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
      - name: sync-repro-folder
        description: | 
          ‚ÜîÔ∏è Synchronize reproduction-models folder bewteen local and ec2 instance
            
            Note: rsync needs to be installed
            
        usage: playground ec2 sync-repro-folder COMMAND
        options: []
  - name: sync-repro-folder
    description: | 
        ‚ÜîÔ∏è Synchronize reproduction-models folder bewteen local and ec2 instance
        
        Note: rsync needs to be installed
        
    usage: playground ec2 sync-repro-folder COMMAND
    options: []
    subcommands:
      - name: local-to-ec2
        description: | 
          üëâ Sync local reproduction-models folder to ec2 instance
        usage: playground ec2 sync-repro-folder local-to-ec2 [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üñ•Ô∏è ec2 instance (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
      - name: ec2-to-local
        description: | 
          üëà Sync ec2 instance reproduction-models folder to local
        usage: playground ec2 sync-repro-folder ec2-to-local [OPTIONS]
        options:
        - names:
          - --instance
          - -i
          argument: INSTANCE
          description: | 
            üñ•Ô∏è ec2 instance (need to use completion to get all required details)
            
            üéì Tip: If not specified, the command will apply to all ec2 instances
            
